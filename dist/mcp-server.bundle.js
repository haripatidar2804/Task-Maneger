#!/usr/bin/env node
"use strict";
var an=Object.defineProperty;var Q=(e,t)=>()=>(e&&(t=e(e=0)),t);var cn=(e,t)=>{for(var n in t)an(e,n,{get:t[n],enumerable:!0})};import ln from"dotenv";var K,oe,et,Vr,W,tt,eo,j=Q(()=>{ln.config();K=process.env.TURSO_DATABASE_URL,oe=process.env.TURSO_AUTH_TOKEN,et=process.env.LOG_LEVEL||"INFO",Vr=process.env.DB_LOGGING_ENABLED==="true",W=parseInt(process.env.DEFAULT_TOKEN_BUDGET||"4000",10),tt=parseFloat(process.env.CONTEXT_DECAY_RATE||"0.95"),eo=parseInt(process.env.MAX_CACHE_SIZE||"1000",10)});function be(){return process.env.MCP_MODE==="true"||process.env.MCP_MODE===!0||global.MCP_MODE===!0}var xe,nt,c,M=Q(()=>{j();xe={DEBUG:0,INFO:1,WARN:2,ERROR:3};nt=be(),c=(e,t,n=null)=>{if(be()||nt||process.env.MCP_MODE==="true")return;let r=e.toUpperCase();if(!xe.hasOwnProperty(r)||xe[r]<xe[et])return;let s=`[${new Date().toISOString()}] [${r}]: ${t}`;if(n){let i=typeof n=="string"?n:JSON.stringify(n);s+=` - ${i}`}be()||nt||process.env.MCP_MODE==="true"||(r==="DEBUG"||r==="INFO"?console.log(s):console.error(s))}});import{createClient as un}from"@libsql/client";async function pn(){let e=process.env.MCP_MODE==="true";try{let t=!1;try{let r=await C(`
        SELECT name FROM sqlite_master
        WHERE type='table' AND name='project_patterns'
      `);t=r&&r.rows&&r.rows.length>0}catch(r){e||c("warn",`Error checking table existence: ${r.message}`);return}if(!t){e||c("info","project_patterns table doesn't exist yet, skipping migration");return}let n=!1;try{let r=await C(`
        PRAGMA table_info(project_patterns)
      `);if(r&&r.rows){for(let o of r.rows)if(o&&o.name==="language"){n=!0;break}}}catch(r){e||c("warn",`Error checking column existence: ${r.message}`);return}if(n){e||c("debug","Language column already exists in project_patterns table");return}e||c("info","Adding language column to project_patterns table");try{await C("ALTER TABLE project_patterns ADD COLUMN language TEXT"),e||c("info","Successfully added language column to project_patterns table")}catch(r){if(r.message&&r.message.includes("duplicate column"))e||c("info","Language column already exists, skipping");else{e||c("warn",`Error adding language column: ${r.message}`);return}}try{await C("CREATE INDEX IF NOT EXISTS idx_project_patterns_language ON project_patterns(language)"),e||c("info","Created index for language column")}catch(r){e||c("warn",`Error creating index: ${r.message}`)}}catch(t){e||c("warn",`Migration warning: ${t.message}`)}}var Z,Y,Re,C,Ae,N=Q(()=>{j();M();Z=null,Y=()=>{let e=process.env.MCP_MODE==="true";if(Z)return Z;if(!K){let t="TURSO_DATABASE_URL is not defined in environment variables";throw e?new Error:new Error(t)}if(!oe){let t="TURSO_AUTH_TOKEN is not defined in environment variables";throw e?new Error:new Error(t)}return Z=un({url:K,authToken:oe}),e||c("info","Database client created",{url:K.substring(0,20)+"..."}),Z},Re=async(e=null)=>{let t=process.env.MCP_MODE==="true";try{let r=0;for(;r<3;)try{return await(e||Y()).execute("SELECT 1"),!0}catch(o){if(r++,r>=3){if(t)return!1;throw new Error(`Database connection test failed: ${o.message}`)}let s=Math.pow(2,r)*100;await new Promise(i=>setTimeout(i,s)),e||(Z=null)}return!0}catch(n){if(t)return!1;throw new Error(`Database connection test failed: ${n.message}`)}},C=async(e,t=[])=>{let n=process.env.MCP_MODE==="true";try{n||c("debug","DB - EXECUTING QUERY",{sql:e.substring(0,150)+(e.length>150?"...":""),args:t.length>0?JSON.stringify(t.slice(0,3))+(t.length>3?"...":""):"[]"});let r=3,o=0,s;for(;o<r;)try{s=await Y().execute({sql:e,args:t});break}catch(i){o++;let u=i.message?.includes("connection")||i.message?.includes("timeout")||i.message?.includes("closed");if(o>=r||!u)throw i;let l=Math.pow(2,o)*100;await new Promise(a=>setTimeout(a,l)),Z=null}return n||c("debug","DB - QUERY RESULT",{rowCount:s.rows?.length||0,rowsPreview:s.rows?.length>0?JSON.stringify(s.rows[0]).substring(0,100)+"...":"No rows",affectedRows:s.rowsAffected||0}),s}catch(r){throw n||c("error","DB - QUERY ERROR",{message:r.message,query:e.substring(0,150),args:t.length>0?JSON.stringify(t.slice(0,3)):"[]"}),n?new Error:new Error(`Query execution failed: ${r.message}
Query: ${e}`)}};Ae=async()=>{let e=process.env.MCP_MODE==="true";try{let t=Y(),n=!0;try{await pn()}catch(o){e||c("warn",`Migration warning: ${o.message}`)}let r=[`CREATE TABLE IF NOT EXISTS code_entities (
        entity_id TEXT PRIMARY KEY, -- UUID
        file_path TEXT, -- Full path for file entities, or path to file containing the entity
        entity_type TEXT NOT NULL, -- e.g., 'file', 'function', 'class', 'method', 'variable', 'interface', 'comment_block'
        name TEXT, -- Name of the function, class, variable etc.
        start_line INTEGER,
        end_line INTEGER,
        content_hash TEXT, -- Hash of the raw content to detect changes
        raw_content TEXT,
        summary TEXT, -- AI or rule-based summary
        language TEXT, -- Programming language
        parent_entity_id TEXT, -- For hierarchical structure (e.g., function inside a class, class inside a file)
        last_modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        last_accessed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- For recency
        importance_score REAL DEFAULT 1.0, -- For prioritization, can decay
        custom_metadata TEXT, -- JSON blob for other properties
        FOREIGN KEY (parent_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_code_entities_file_path ON code_entities(file_path)","CREATE INDEX IF NOT EXISTS idx_code_entities_type ON code_entities(entity_type)","CREATE INDEX IF NOT EXISTS idx_code_entities_name ON code_entities(name)","CREATE INDEX IF NOT EXISTS idx_code_entities_last_accessed ON code_entities(last_accessed_at DESC)","CREATE INDEX IF NOT EXISTS idx_code_entities_importance ON code_entities(importance_score DESC)",`CREATE TABLE IF NOT EXISTS entity_keywords (
        keyword_id INTEGER PRIMARY KEY AUTOINCREMENT,
        entity_id TEXT NOT NULL,
        keyword TEXT NOT NULL,
        term_frequency REAL,
        weight REAL DEFAULT 1.0,
        keyword_type TEXT, -- e.g., 'identifier', 'comment', 'string_literal', 'n_gram_2', 'n_gram_3'
        FOREIGN KEY (entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_entity_keywords_keyword ON entity_keywords(keyword)","CREATE INDEX IF NOT EXISTS idx_entity_keywords_entity ON entity_keywords(entity_id)","CREATE UNIQUE INDEX IF NOT EXISTS idx_entity_keywords_entity_keyword_type ON entity_keywords(entity_id, keyword, keyword_type)",`CREATE VIRTUAL TABLE IF NOT EXISTS code_entities_fts USING fts5(
        entity_id UNINDEXED,
        name,
        searchable_content
      )`,`CREATE TRIGGER IF NOT EXISTS code_entities_ai AFTER INSERT ON code_entities BEGIN
        INSERT INTO code_entities_fts (entity_id, name, searchable_content)
        VALUES (new.entity_id, new.name, new.raw_content || ' ' || COALESCE(new.summary, ''));
      END`,`CREATE TRIGGER IF NOT EXISTS code_entities_ad AFTER DELETE ON code_entities BEGIN
        DELETE FROM code_entities_fts WHERE entity_id = old.entity_id;
      END`,`CREATE TRIGGER IF NOT EXISTS code_entities_au AFTER UPDATE ON code_entities BEGIN
        UPDATE code_entities_fts SET
          name = new.name,
          searchable_content = new.raw_content || ' ' || COALESCE(new.summary, '')
        WHERE entity_id = old.entity_id;
      END`,`CREATE TABLE IF NOT EXISTS code_relationships (
        relationship_id TEXT PRIMARY KEY, -- UUID
        source_entity_id TEXT NOT NULL,
        target_entity_id TEXT NOT NULL,
        relationship_type TEXT NOT NULL,
        weight REAL DEFAULT 1.0,
        metadata TEXT, -- JSON blob
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (source_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE,
        FOREIGN KEY (target_entity_id) REFERENCES code_entities(entity_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_code_relationships_source ON code_relationships(source_entity_id, relationship_type)","CREATE INDEX IF NOT EXISTS idx_code_relationships_target ON code_relationships(target_entity_id, relationship_type)","CREATE UNIQUE INDEX IF NOT EXISTS idx_code_relationships_unique ON code_relationships(source_entity_id, target_entity_id, relationship_type)",`CREATE TABLE IF NOT EXISTS conversation_history (
        message_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        role TEXT NOT NULL, -- 'user', 'assistant', 'system'
        content TEXT NOT NULL,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        related_context_entity_ids TEXT, -- JSON array of entity_ids
        summary TEXT,
        user_intent TEXT,
        topic_segment_id TEXT,        -- Reference to topic segment
        semantic_markers TEXT,        -- JSON array of semantic markers found in message
        sentiment_indicators TEXT      -- JSON structure for sentiment analysis
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_history_conversation_ts ON conversation_history(conversation_id, timestamp DESC)","CREATE INDEX IF NOT EXISTS idx_conversation_history_topic ON conversation_history(topic_segment_id)",`CREATE TABLE IF NOT EXISTS conversation_topics (
        topic_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        topic_name TEXT NOT NULL,
        description TEXT,
        start_message_id TEXT NOT NULL,
        end_message_id TEXT,    -- NULL if ongoing
        start_timestamp TIMESTAMP NOT NULL,
        end_timestamp TIMESTAMP,  -- NULL if ongoing
        primary_entities TEXT,    -- JSON array of entity_ids
        keywords TEXT,            -- JSON array of keywords
        summary TEXT,
        parent_topic_id TEXT,     -- For hierarchical topic structure
        FOREIGN KEY (start_message_id) REFERENCES conversation_history(message_id) ON DELETE CASCADE,
        FOREIGN KEY (parent_topic_id) REFERENCES conversation_topics(topic_id) ON DELETE SET NULL
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_topics_conversation ON conversation_topics(conversation_id)","CREATE INDEX IF NOT EXISTS idx_conversation_topics_timestamps ON conversation_topics(start_timestamp, end_timestamp)",`CREATE TABLE IF NOT EXISTS conversation_purposes (
        purpose_id TEXT PRIMARY KEY, -- UUID
        conversation_id TEXT NOT NULL,
        purpose_type TEXT NOT NULL,  -- 'debugging', 'feature_planning', 'code_review', etc.
        confidence REAL DEFAULT 0.0, -- Confidence score (0.0 to 1.0)
        start_timestamp TEXT NOT NULL, -- ISO timestamp
        end_timestamp TEXT, -- ISO timestamp, NULL if still active
        metadata TEXT -- Additional metadata in JSON format
      )`,"CREATE INDEX IF NOT EXISTS idx_conversation_purposes_conversation ON conversation_purposes(conversation_id)","CREATE INDEX IF NOT EXISTS idx_conversation_purposes_type ON conversation_purposes(purpose_type, confidence DESC)",`CREATE TABLE IF NOT EXISTS timeline_events (
        event_id TEXT PRIMARY KEY, -- UUID
        event_type TEXT NOT NULL,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        data TEXT, -- JSON blob
        associated_entity_ids TEXT, -- JSON array of code_entity_ids
        conversation_id TEXT -- If related to a specific conversation
      )`,"CREATE INDEX IF NOT EXISTS idx_timeline_events_ts ON timeline_events(timestamp DESC)","CREATE INDEX IF NOT EXISTS idx_timeline_events_type ON timeline_events(event_type)",`CREATE TABLE IF NOT EXISTS context_snapshots (
        snapshot_id TEXT PRIMARY KEY, -- UUID
        name TEXT,
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        timeline_event_id TEXT,
        snapshot_data TEXT NOT NULL, -- JSON blob
        FOREIGN KEY (timeline_event_id) REFERENCES timeline_events(event_id) ON DELETE SET NULL
      )`,"CREATE INDEX IF NOT EXISTS idx_context_snapshots_name ON context_snapshots(name)",`CREATE TABLE IF NOT EXISTS focus_areas (
        focus_id TEXT PRIMARY KEY, -- UUID
        focus_type TEXT NOT NULL,
        identifier TEXT,
        description TEXT,
        related_entity_ids TEXT, -- JSON array of code_entity_ids
        keywords TEXT, -- JSON array of defining keywords
        last_activated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        is_active BOOLEAN DEFAULT FALSE
      )`,"CREATE INDEX IF NOT EXISTS idx_focus_areas_active ON focus_areas(is_active, last_activated_at DESC)",`CREATE TABLE IF NOT EXISTS project_patterns (
        pattern_id TEXT PRIMARY KEY, -- UUID
        pattern_type TEXT NOT NULL,
        name TEXT,
        description TEXT,
        representation TEXT NOT NULL, -- JSON or textual
        detection_rules TEXT,
        frequency INTEGER DEFAULT 0,
        last_detected_at TIMESTAMP,
        utility_score REAL DEFAULT 0.0,
        confidence_score REAL DEFAULT 0.5, -- confidence in pattern validity
        reinforcement_count INTEGER DEFAULT 1, -- times pattern was reinforced
        is_global BOOLEAN DEFAULT FALSE, -- indicates if promoted to global status
        session_origin_id TEXT, -- originating session if any
        language TEXT, -- NEW COLUMN: programming language the pattern applies to
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )`,"CREATE INDEX IF NOT EXISTS idx_project_patterns_type ON project_patterns(pattern_type)","CREATE INDEX IF NOT EXISTS idx_project_patterns_global ON project_patterns(is_global, confidence_score DESC)","CREATE INDEX IF NOT EXISTS idx_project_patterns_utility ON project_patterns(utility_score DESC)",`CREATE TABLE IF NOT EXISTS pattern_observations (
        observation_id TEXT PRIMARY KEY, -- UUID
        pattern_id TEXT NOT NULL,
        conversation_id TEXT,
        context_entities TEXT, -- JSON array of entity_ids
        observation_type TEXT NOT NULL, -- 'usage', 'confirmation', 'rejection'
        observation_data TEXT, -- JSON with details
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (pattern_id) REFERENCES project_patterns(pattern_id) ON DELETE CASCADE
      )`,"CREATE INDEX IF NOT EXISTS idx_pattern_observations_pattern ON pattern_observations(pattern_id)","CREATE INDEX IF NOT EXISTS idx_pattern_observations_type_ts ON pattern_observations(observation_type, timestamp DESC)",`CREATE TABLE IF NOT EXISTS system_logs (
        log_id INTEGER PRIMARY KEY AUTOINCREMENT,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        level TEXT NOT NULL, -- 'INFO', 'WARN', 'ERROR', 'DEBUG'
        message TEXT NOT NULL,
        data TEXT -- Optional JSON blob
      )`,"CREATE INDEX IF NOT EXISTS idx_system_logs_timestamp_level ON system_logs(timestamp DESC, level)",`CREATE TABLE IF NOT EXISTS knowledge_items (
        item_id TEXT PRIMARY KEY, -- UUID
        item_type TEXT NOT NULL, -- Type of knowledge item (concept, code_pattern, domain_term, etc.)
        name TEXT NOT NULL, -- Display name of the knowledge item
        content TEXT, -- JSON or raw content depending on type
        metadata TEXT, -- Additional metadata as JSON
        confidence_score REAL DEFAULT 0.5, -- Confidence score
        created_at TEXT NOT NULL, -- Creation timestamp
        updated_at TEXT NOT NULL, -- Last update timestamp
        conversation_id TEXT -- Source conversation ID
      )`,"CREATE INDEX IF NOT EXISTS idx_knowledge_items_type ON knowledge_items(item_type)","CREATE INDEX IF NOT EXISTS idx_knowledge_items_conversation ON knowledge_items(conversation_id)","CREATE INDEX IF NOT EXISTS idx_knowledge_items_confidence ON knowledge_items(confidence_score DESC)",`CREATE TABLE IF NOT EXISTS context_states (
        state_id TEXT PRIMARY KEY, -- UUID
        milestone_id TEXT,
        conversation_id TEXT,
        topic_id TEXT,
        state_type TEXT NOT NULL, -- Type of context state
        state_data TEXT, -- JSON data representing the state
        created_at TEXT NOT NULL, -- Creation timestamp
        metadata TEXT -- Additional metadata as JSON
      )`,"CREATE INDEX IF NOT EXISTS idx_context_states_milestone ON context_states(milestone_id)","CREATE INDEX IF NOT EXISTS idx_context_states_conversation ON context_states(conversation_id)"];for(let o of r)try{await t.execute(o)}catch(s){e||(c("error",`Error executing schema statement: ${s.message}`),c("error",`Failed statement: ${o.substring(0,100)}...`)),n=!1}return n}catch(t){if(e)return!1;throw new Error(`Database schema initialization failed: ${t.message}`)}}});function O(e,t="plaintext"){let n=e.toLowerCase();switch(t){case"javascript":case"typescript":case"jsx":case"tsx":return rt(n);case"python":return ot(n);case"java":case"csharp":case"c#":return _n(n);case"ruby":return st(n);case"go":return En(n);case"plaintext":default:return I(n)}}function Ne(e,t){if(!e)return[];let n=[];switch(t.toLowerCase()){case"javascript":case"typescript":case"jsx":case"tsx":dn(e,n);break;case"python":fn(e,n);break;case"csharp":case"c#":mn(e,n);break}return n}function dn(e,t){let n=/\.\s*then\s*\(\s*(?:function\s*\([^)]*\)|[^=>(]*=>\s*[^)]*)\s*\)(?:\s*\.(?:then|catch|finally)\s*\([^)]*\))+/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"js_promise_chain",location:{start:r.index,end:r.index+r[0].length}});let o=/\basync\s+(?:function\s*[a-zA-Z0-9_$]*\s*\([^)]*\)|(?:[a-zA-Z0-9_$]+\s*=>)|(?:\([^)]*\)\s*=>))(?:(?:.|\n)*?\bawait\b(?:.|\n)*?)/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"js_async_await",location:{start:r.index,end:r.index+r[0].length}});let s=/(?:\.|\()(?:[a-zA-Z0-9_$]+)?\s*\(\s*(?:\([^)]*\)|[a-zA-Z0-9_$]+)\s*=>\s*(?:{[^}]*}|[^);,]*)/g;for(;(r=s.exec(e))!==null;)t.some(u=>u.type==="js_promise_chain"&&r.index>=u.location.start&&r.index+r[0].length<=u.location.end)||t.push({idiom:r[0],type:"js_arrow_callback",location:{start:r.index,end:r.index+r[0].length}})}function fn(e,t){let n=/\[\s*[^\[\]]*\s+for\s+[^\[\]]+\s+in\s+[^\[\]]+(?:\s+if\s+[^\[\]]+)?\s*\]/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"python_list_comprehension",location:{start:r.index,end:r.index+r[0].length}});let o=/\{\s*[^{}]*\s*:\s*[^{}]*\s+for\s+[^{}]+\s+in\s+[^{}]+(?:\s+if\s+[^{}]+)?\s*\}/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"python_dict_comprehension",location:{start:r.index,end:r.index+r[0].length}});let s=/lambda\s+[^:]+:[^,\n)]+/g;for(;(r=s.exec(e))!==null;)t.push({idiom:r[0],type:"python_lambda",location:{start:r.index,end:r.index+r[0].length}});let i=/\(\s*[^()]*\s+for\s+[^()]+\s+in\s+[^()]+(?:\s+if\s+[^()]+)?\s*\)/g;for(;(r=i.exec(e))!==null;)t.push({idiom:r[0],type:"python_generator_expression",location:{start:r.index,end:r.index+r[0].length}})}function mn(e,t){let n=/\.\s*(?:Where|Select|OrderBy|OrderByDescending|GroupBy|Join|Skip|Take|First|FirstOrDefault|Any|All|Count)\s*\(\s*[^)]*\)(?:\s*\.\s*(?:Where|Select|OrderBy|OrderByDescending|GroupBy|Join|Skip|Take|First|FirstOrDefault|Any|All|Count)\s*\(\s*[^)]*\))*/g,r;for(;(r=n.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_linq_method",location:{start:r.index,end:r.index+r[0].length}});let o=/from\s+\w+\s+in\s+[^{]+(?:where\s+[^{]+)?(?:orderby\s+[^{]+)?(?:select\s+[^{;]+)?(?:group\s+[^{;]+by\s+[^{;]+)?/g;for(;(r=o.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_linq_query",location:{start:r.index,end:r.index+r[0].length}});let s=/\basync\s+[^(]*\([^)]*\)(?:\s*<[^>]*>)?\s*(?:=>)?\s*{(?:(?:.|\n)*?\bawait\b(?:.|\n)*?)}/g;for(;(r=s.exec(e))!==null;)t.push({idiom:r[0],type:"csharp_async_await",location:{start:r.index,end:r.index+r[0].length}});let i=/(?:\([^)]*\)|\w+)\s*=>\s*(?:{[^}]*}|[^;]+)/g;for(;(r=i.exec(e))!==null;)t.some(l=>(l.type==="csharp_linq_method"||l.type==="csharp_linq_query")&&r.index>=l.location.start&&r.index+r[0].length<=l.location.end)||t.push({idiom:r[0],type:"csharp_lambda",location:{start:r.index,end:r.index+r[0].length}})}function L(e,t=10,n="plaintext"){let r=yn(n),o={};for(let i of e)o[i]||(o[i]=0),o[i]++;let s=[];for(let[i,u]of Object.entries(o)){if(r.has(i)&&i.length<6&&!/[_\-$#@]/.test(i))continue;let l=u;gn(i,n)&&(l*=2),i.length>6&&(l*=1.5),/[_$]/.test(i)&&(l*=1.2),i.length<3&&!/[_\-$#@]/.test(i)&&(l*=.5),l=hn(i,l,n),s.push({keyword:i,score:l})}return s.sort((i,u)=>u.score-i.score).slice(0,t)}function gn(e,t){return!!(/[a-z][A-Z]/.test(e)||/^[A-Z][a-z]/.test(e)||e.includes("_")&&e.length>4||/^(on|handle|process|get|set|is|has|should|with)/i.test(e)||/[a-z][0-9]/.test(e)||(t==="javascript"||t==="typescript")&&(/\$/.test(e)||/^use[A-Z]/.test(e))||t==="python"&&(/^__.*__$/.test(e)||/^self\./.test(e)))}function hn(e,t,n){switch(n){case"javascript":case"typescript":case"jsx":case"tsx":/^(use|component|props|state|render|effect|memo|callback)/.test(e)&&(t*=1.5),/^(on[A-Z]|handle[A-Z])/.test(e)&&(t*=1.3);break;case"python":/^(def|class|self|super|__init__|__main__)/.test(e)&&(t*=1.3),/^@/.test(e)&&(t*=1.4);break;case"java":case"csharp":case"c#":/^(public|private|protected|static|final|override|virtual|abstract)/.test(e)&&(t*=1.2),/^(class|interface|enum|record|struct)/.test(e)&&(t*=1.3);break;case"ruby":/^(attr_|def|class|module|require|include|extend)/.test(e)&&(t*=1.3),/^:/.test(e)&&(t*=1.2);break;case"go":/^(func|struct|interface|type|go|chan|defer|goroutine)/.test(e)&&(t*=1.3);break}return t}function yn(e){let t=new Set(["a","an","the","and","or","but","if","then","else","when","at","from","by","for","with","about","against","between","into","through","during","before","after","above","below","to","is","am","are","was","were","be","been","being","have","has","had","having","do","does","did","doing","would","should","could","ought","i","you","he","she","it","we","they","their","this","that","these","those","of","in","as","on","not","no","its","his","her"]),n=new Set(["function","class","if","else","for","while","do","switch","case","break","continue","return","try","catch","finally","throw","throws","public","private","protected","static","final","abstract","interface","extends","implements","import","export","package","namespace","var","let","const","new","this","super","null","undefined","true","false"]),r=new Set([...t,...n]);switch(e){case"javascript":case"typescript":case"jsx":case"tsx":["typeof","instanceof","async","await","yield","void","delete","module","require","console","log","window","document","event","prototype","constructor","string","number","boolean","object","array"].forEach(o=>r.add(o));break;case"python":["def","lambda","from","as","import","with","is","in","not","and","or","global","nonlocal","pass","yield","assert","del","raise","except","print","exec","eval","None","True","False","range","len","self"].forEach(o=>r.add(o));break;case"java":["void","boolean","byte","char","short","int","long","float","double","instanceof","strictfp","synchronized","transient","volatile","native","package","throws","throw","exception","assert","enum"].forEach(o=>r.add(o));break;case"csharp":case"c#":["using","namespace","where","select","from","group","into","orderby","join","equals","out","ref","in","value","is","as","void","int","string","bool","decimal","object","char","byte","sbyte","uint","long","ulong","short","ushort","double","float","dynamic","delegate","event","async","await","partial","virtual","override","sealed","base"].forEach(o=>r.add(o));break;case"ruby":["def","end","module","require","include","extend","attr","attr_reader","attr_writer","attr_accessor","lambda","proc","yield","self","nil","true","false","unless","until","begin","rescue","ensure","alias"].forEach(o=>r.add(o));break;case"go":["func","type","struct","interface","map","chan","go","select","package","import","const","var","iota","make","new","append","len","cap","nil","true","false","int","int8","int16","int32","int64","uint","uint8","uint16","uint32","uint64","float32","float64","string","byte","rune","defer","panic","recover"].forEach(o=>r.add(o));break}return r}function I(e){return e.replace(/([a-z0-9])[-_]([a-z0-9])/g,"$1$2").replace(/[.,;:(){}[\]<>?!]/g," $& ").replace(/\u0001/g,"_").split(/\s+/).filter(r=>r.length>0)}function rt(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,S=>{let b=`__COMMENT_BLOCK_${r++}__`;return n[b]=S,b}).replace(/\/\/[^\n]*/g,S=>{let b=`__COMMENT_LINE_${r++}__`;return n[b]=S,b}),i={},u=0,g=s.replace(/(?<![a-zA-Z0-9_\)\]\}])\/(?:\\\/|[^\/\n])+\/[gimuy]*/g,S=>{let b=`__REGEX_${u++}__`;return i[b]=S,b}).replace(/`(?:\\`|\\\\|[^`])*`/g,S=>{let b=`__TEMPLATE_${u++}__`;i[b]=S;let x=[],v=S.match(/\${([^}]*)}/g);return v&&(v.forEach(R=>{x.push(R.slice(2,-1))}),x.forEach(R=>{let A=rt(R);t.push(...A)})),b}).replace(/'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*"/g,S=>{let b=`__STRING_${u++}__`;return i[b]=S,b}).replace(/<([A-Z][a-zA-Z0-9]*|[a-z][a-z0-9]*)((?:\s+[a-zA-Z0-9_]+(?:=(?:"|'|\{).*?(?:"|'|\}))?)*)\s*(?:\/)?>/g,(S,b,x)=>{let v=`__JSX_TAG_${u++}__`;if(i[v]=S,t.push(b),x){let R=x.match(/[a-zA-Z0-9_]+(?==)/g);R&&t.push(...R)}return v}).replace(/<\/([A-Z][a-zA-Z0-9]*|[a-z][a-z0-9]*)>/g,(S,b)=>{let x=`__JSX_CLOSING_${u++}__`;return i[x]=S,t.push(b),x}).replace(/@([a-zA-Z][a-zA-Z0-9_]*)(?:\((?:[^)(]*|\([^)(]*\))*\))?/g,(S,b)=>{let x=`__DECORATOR_${u++}__`;i[x]=S,t.push(b);let v=S.match(/\((.*)\)/);if(v&&v[1]){let R=I(v[1]);t.push(...R)}return x}).replace(/=>/g,S=>(t.push("arrow_function")," => ")).replace(/\?\./g,S=>(t.push("optional_chaining")," ?. ")).replace(/\?\?/g,S=>(t.push("nullish_coalescing")," ?? ")).replace(/import\s+(?:{[^}]*}|\*\s+as\s+[a-zA-Z][a-zA-Z0-9_]*|[a-zA-Z][a-zA-Z0-9_]*)\s+from\s+['"][^'"]*['"]/g,S=>{t.push("import");let b=S.match(/from\s+['"]([^'"]*)['"]/);b&&b[1]&&t.push(b[1]);let x=S.match(/import\s+({[^}]*}|\*\s+as\s+[a-zA-Z][a-zA-Z0-9_]*|[a-zA-Z][a-zA-Z0-9_]*)/);if(x&&x[1]){let v=x[1];if(v.startsWith("{")){let R=v.replace(/[{}]/g,"").split(",").map(A=>A.trim()).filter(A=>A.length>0);t.push(...R)}else if(v.includes("* as")){let R=v.match(/\*\s+as\s+([a-zA-Z][a-zA-Z0-9_]*)/);R&&R[1]&&t.push(R[1])}else t.push(v.trim())}return" "}),y=I(g),d=[];for(let S of y){if(S.startsWith("__")&&S.endsWith("__")){d.push(S);continue}if(["=>","?.","??"].includes(S)){d.push(S);continue}let b=S.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");d.push(S),b.length>1&&d.push(...b)}let T=[];for(let S of d)if(i[S]){if(S.startsWith("__REGEX_")?T.push("regex_literal"):S.startsWith("__JSX_")?T.push("jsx_element"):S.startsWith("__DECORATOR_")?T.push("decorator"):T.push(S),S.startsWith("__STRING_")||S.startsWith("__TEMPLATE_")){let x=i[S].replace(/^[`'"](.*)[`'"]$/s,"$1"),v=I(x);T.push(...v)}}else if(n[S]){T.push("code_comment");let x=n[S].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(v=>/^[a-z0-9_]{3,}$/i.test(v)).map(v=>v.toLowerCase());T.push(...x)}else T.push(S);return[...new Set(T)]}function ot(e){let t=[],n={},r=0,s=e.replace(/(?:'''[\s\S]*?'''|"""[\s\S]*?""")/g,g=>{let y=`__PYCOMMENT_BLOCK_${r++}__`;return n[y]=g,y}).replace(/#[^\n]*/g,g=>{let y=`__PYCOMMENT_LINE_${r++}__`;return n[y]=g,y}),i={},u=0,f=s.replace(/(?:f|fr|rf)(?:'''[\s\S]*?'''|"""[\s\S]*?"""|'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*")/g,g=>{let y=`__PYFSTRING_${u++}__`;i[y]=g;let d=[],T=g.match(/(?<!\\){([^{}]*)}/g);return T&&(T.forEach(S=>{d.push(S.slice(1,-1))}),d.forEach(S=>{let b=ot(S);t.push(...b)})),y}).replace(/(?:r|b|rb|br)?(?:'''[\s\S]*?'''|"""[\s\S]*?"""|'(?:\\'|\\\\|[^'])*'|"(?:\\"|\\\\|[^"])*")/g,g=>{let y=`__PYSTRING_${u++}__`;return i[y]=g,y}).replace(/@([a-zA-Z][a-zA-Z0-9_.]*)(?:\((?:[^)(]*|\([^)(]*\))*\))?/g,(g,y)=>{let d=`__PYDECORATOR_${u++}__`;i[d]=g,t.push(y);let T=g.match(/\((.*)\)/);if(T&&T[1]){let S=I(T[1]);t.push(...S)}return d}).replace(/:=/g,g=>(t.push("walrus_operator")," := ")).replace(/\[.*:.*\]/g,g=>(t.push("slice_operation"),g.slice(1,-1).split(":").forEach(T=>{if(T.trim()){let S=I(T.trim());t.push(...S)}}),g)),_=f.split(`
`),h=0;for(let g of _){if(g.trim()==="")continue;let y=g.match(/^(\s*)/),d=y?y[1].length:0;if(d!==h){if(d>h)t.push("indent");else{let S=Math.floor((h-d)/4);for(let b=0;b<S;b++)t.push("dedent")}h=d}let T=g.trim();if(T){let S=["def","class","lambda","return","yield","from","import","as","with","try","except","finally","raise","assert","if","elif","else","while","for","in","continue","break","pass","global","nonlocal","del","is","not","and","or","async","await","comprehension","self"];for(let x of S)T.includes(x)&&new RegExp(`\\b${x}\\b`,"g").test(T)&&t.push(x);let b=I(T);t.push(...b)}}(f.includes("append(")||f.includes(".extend("))&&t.push("list_operation"),(f.includes(".get(")||f.includes(".items()")||f.includes(".keys()")||f.includes(".values()"))&&t.push("dict_operation");let w=[];for(let g of t){if(g.startsWith("__")&&g.endsWith("__")){w.push(g);continue}if(g.includes("_")){let y=g.split("_").filter(d=>d.length>0);w.push(g),w.push(...y)}else w.push(g)}let E=[];for(let g of w)if(i[g]){if(g.startsWith("__PYFSTRING_")?E.push("f_string"):g.startsWith("__PYSTRING_")?E.push("string_literal"):g.startsWith("__PYDECORATOR_")?E.push("decorator"):E.push(g),g.startsWith("__PYSTRING_")||g.startsWith("__PYFSTRING_")){let d=i[g];if(d.startsWith("f")||d.startsWith("r")||d.startsWith("fr")||d.startsWith("rf")||d.startsWith("b")||d.startsWith("rb")||d.startsWith("br")){let S=/^[a-z]+/.exec(d)[0].length;d=d.substring(S)}d=d.replace(/^['"]|['"]$/g,""),d=d.replace(/^'''|'''$/g,""),d=d.replace(/^"""|"""$/g,""),d=d.replace(/{[^{}]*}/g," ");let T=I(d);E.push(...T)}}else if(n[g]){E.push("code_comment");let d=n[g].replace(/^#{1}/,"").replace(/^'''|'''$/g,"").replace(/^"""|"""$/g,"").split(/\s+/).filter(T=>/^[a-z0-9_]{3,}$/i.test(T)).map(T=>T.toLowerCase());E.push(...d)}else E.push(g);return[...new Set(E)]}function _n(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,y=>{let d=`__JAVA_COMMENT_BLOCK_${r++}__`;return n[d]=y,d}).replace(/\/\/[^\n]*/g,y=>{let d=`__JAVA_COMMENT_LINE_${r++}__`;return n[d]=y,d}),i={},u=0,f=s.replace(/"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'/g,y=>{let d=`__JAVASTRING_${u++}__`;return i[d]=y,d}).replace(/@([a-zA-Z][a-zA-Z0-9_.]*)(?:\s*\((?:[^)(]*|\([^)(]*\))*\))?/g,(y,d)=>{let T=`__ANNOTATION_${u++}__`;i[T]=y,t.push("annotation"),t.push(d.toLowerCase());let S=y.match(/\((.*)\)/);if(S&&S[1]){let x=S[1].split(",");for(let v of x){let R=v.split("=");R.length===2&&t.push(R[0].trim());let A=I(v);t.push(...A)}}return T}).replace(/<([^<>]*(?:<[^<>]*(?:<[^<>]*>)*[^<>]*>)*[^<>]*)>/g,y=>{let d=`__GENERIC_${u++}__`;i[d]=y,t.push("generic_type");let S=y.slice(1,-1).split(/,(?![^<>]*>)/);for(let b of S){let x=I(b.trim());t.push(...x)}return d}).replace(/(?:\(.*?\)|[a-zA-Z_][a-zA-Z0-9_]*)\s*(?:->|=>)\s*(?:{[\s\S]*?}|[^;]*)/g,y=>{let d=`__LAMBDA_${u++}__`;i[d]=y,t.push("lambda_expression");let T=I(y);return t.push(...T),d}),_=["public","private","protected","internal","static","final","abstract","override","virtual","readonly","const","sealed","partial","async","volatile","transient","synchronized","unsafe","extern"],h=f;for(let y of _){let d=new RegExp(`\\b${y}\\b`,"gi");h=h.replace(d,T=>(t.push(T.toLowerCase()),t.push("access_modifier"),T))}if(h=h.replace(/\b(?:package|namespace)\s+([a-zA-Z_][a-zA-Z0-9_.]*)/g,(y,d)=>{t.push("package_declaration");let T=d.split(".");return t.push(d),t.push(...T),y}),h=h.replace(/\b(?:import|using)\s+(?:static\s+)?([a-zA-Z_][a-zA-Z0-9_.]*(?:\.\*)?)/g,(y,d)=>{t.push("import_statement");let T=d.split(".");return t.push(d),T.length>0&&T[T.length-1]==="*"&&(T.pop(),t.push("wildcard_import")),t.push(...T),y}),/\bfrom\b.*\bin\b.*\bselect\b/i.test(h)){t.push("linq_expression");let y=["from","in","select","where","group","by","into","orderby","join","let","on","equals"];for(let d of y)new RegExp(`\\b${d}\\b`,"gi").test(h)&&t.push(`linq_${d}`)}let w=I(h);t.push(...w);let E=[];for(let y of t){if(y.startsWith("__")&&y.endsWith("__")){E.push(y);continue}if(y.includes(".")){let d=y.split(".");E.push(y),E.push(...d);continue}if(E.push(y),/[a-z][A-Z]/.test(y)){let d=y.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");d.length>1&&E.push(...d)}}let g=[];for(let y of E)if(i[y]){if(y.startsWith("__JAVASTRING_")?g.push("string_literal"):y.startsWith("__ANNOTATION_")?g.push("annotation"):y.startsWith("__GENERIC_")?g.push("generic"):y.startsWith("__LAMBDA_")?g.push("lambda"):g.push(y),y.startsWith("__JAVASTRING_")){let T=i[y].replace(/^"|"$/g,"").replace(/^'|'$/g,"");if(T.trim().length>0){let S=I(T);g.push(...S)}}}else if(n[y]){g.push("code_comment");let T=n[y].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(S=>/^[a-z0-9_]{3,}$/i.test(S)).map(S=>S.toLowerCase());g.push(...T)}else g.push(y);return[...new Set(g)]}function st(e){let t=[],n={},r=0,s=e.replace(/=begin[\s\S]*?=end/g,d=>{let T=`__RUBY_COMMENT_BLOCK_${r++}__`;return n[T]=d,T}).replace(/#[^\n]*/g,d=>{let T=`__RUBY_COMMENT_LINE_${r++}__`;return n[T]=d,T}),i={},u=0,_=s.replace(/"(?:[^"\\]|\\.|#\{[^}]*\})*"/g,d=>{let T=`__RUBY_INTERPOLATED_STRING_${u++}__`;i[T]=d;let S=[],b=d.match(/#\{([^}]*)\}/g);return b&&(b.forEach(x=>{S.push(x.slice(2,-1))}),S.forEach(x=>{let v=st(x);t.push(...v)})),T}).replace(/('(?:[^'\\]|\\.)*'|%[qQ]?\{(?:[^\\}]|\\.)*\}|%[qQ]?\((?:[^\\)]|\\.)*\)|%[qQ]?\[(?:[^\\]]|\\.)*\]|%[qQ]?<(?:[^\\>]|\\.)*>|<<-?(['"]?)(\w+)\1[\s\S]*?\2)/g,d=>{let T=`__RUBY_STRING_${u++}__`;return i[T]=d,T}).replace(/\/(?:[^\/\\]|\\.)*\/[iomxneus]*/g,d=>{let T=`__RUBY_REGEXP_${u++}__`;return i[T]=d,t.push("regexp"),T}).replace(/:(?:@?[a-zA-Z_][a-zA-Z0-9_]*(?:[?!]|=(?!=))?|"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'|\S+)/g,d=>{let T=`__RUBY_SYMBOL_${u++}__`;i[T]=d;let S=d.substring(1);return t.push("symbol"),t.push(`symbol_${S}`),(S.endsWith("?")||S.endsWith("!"))&&t.push(`symbol_${S.slice(0,-1)}`),T});_=_.replace(/\bdo\s*(?:\|[^|]*\|)?[\s\S]*?\bend\b/g,d=>{let T=`__RUBY_BLOCK_DO_${u++}__`;i[T]=d,t.push("block_do_end");let S=d.match(/\|\s*([^|]*)\s*\|/);S&&S[1]&&S[1].split(",").forEach(R=>{t.push(R.trim())});let b=d.replace(/\bdo\s*(?:\|[^|]*\|)?/,"").replace(/\bend\b$/,""),x=I(b);return t.push(...x),T}),_=_.replace(/\{(?:\s*\|[^|]*\|\s*)?[^{}]*(?:\{[^{}]*\}[^{}]*)*\}/g,d=>{if(/^\{\s*:/.test(d)||/^\{\s*['"]/.test(d))return d;let T=`__RUBY_BLOCK_BRACE_${u++}__`;i[T]=d,t.push("block_brace");let S=d.match(/\|\s*([^|]*)\s*\|/);S&&S[1]&&S[1].split(",").forEach(R=>{t.push(R.trim())});let b=d.slice(1,-1);S&&(b=b.replace(/\|\s*[^|]*\s*\|/,""));let x=I(b);return t.push(...x),T});let h=_.replace(/\.\.(\.)?/g,d=>(t.push(d===".."?"range_operator_inclusive":"range_operator_exclusive")," "+d+" "));h=h.replace(/\bdef\s+(?:self\.)?([a-zA-Z_][a-zA-Z0-9_]*[?!=]?)/g,(d,T)=>(t.push("method_definition"),t.push(T),(T.endsWith("?")||T.endsWith("!")||T.endsWith("="))&&t.push(T.slice(0,-1)),d)),h=h.replace(/\b(?:class|module)\s+([A-Z][a-zA-Z0-9_]*(?:::[A-Z][a-zA-Z0-9_]*)*)/g,(d,T)=>{if(t.push(d.startsWith("class")?"class_definition":"module_definition"),t.push(T),T.includes("::")){let S=T.split("::");t.push(...S)}return d});let w=I(h),E=["if","unless","else","elsif","end","begin","rescue","ensure","while","until","for","break","next","redo","retry","return","super","self","nil","true","false","and","or","not","yield"];for(let d of E)new RegExp(`\\b${d}\\b`,"g").test(h)&&t.push(d);t.push(...w);let g=[];for(let d of t){if(d.startsWith("__RUBY_")){g.push(d);continue}g.push(d),(d.endsWith("?")||d.endsWith("!"))&&g.push(d.slice(0,-1)),d.endsWith("=")&&!["==","!=",">=","<=","=>"].includes(d)&&g.push(d.slice(0,-1))}let y=[];for(let d of g)if(i[d])if(d.startsWith("__RUBY_STRING_")||d.startsWith("__RUBY_INTERPOLATED_STRING_")){y.push("string_literal");let S=i[d];if(S.startsWith("'")&&S.endsWith("'")||S.startsWith('"')&&S.endsWith('"')?S=S.slice(1,-1):(S.startsWith("%q")||S.startsWith("%Q"))&&(S=S.slice(3,-1)),S=S.replace(/#\{[^}]*\}/g," "),S.trim()){let b=I(S);y.push(...b)}}else d.startsWith("__RUBY_SYMBOL_")?y.push("symbol"):d.startsWith("__RUBY_BLOCK_")?y.push("block"):d.startsWith("__RUBY_REGEXP_")?y.push("regexp"):y.push(d);else if(n[d]){y.push("code_comment");let S=n[d].replace(/^#/,"").replace(/^=begin\s*|\s*=end$/g,"").split(/\s+/).filter(b=>/^[a-z0-9_]{3,}$/i.test(b)).map(b=>b.toLowerCase());y.push(...S)}else y.push(d);return[...new Set(y)]}function En(e){let t=[],n={},r=0,s=e.replace(/\/\*[\s\S]*?\*\//g,v=>{let R=`__GO_COMMENT_BLOCK_${r++}__`;return n[R]=v,R}).replace(/\/\/[^\n]*/g,v=>{let R=`__GO_COMMENT_LINE_${r++}__`;return n[R]=v,R}),i={},u=0,y=s.replace(/`[^`]*`/g,v=>{let R=`__GO_RAW_STRING_${u++}__`;return i[R]=v,R}).replace(/"(?:[^"\\]|\\.)*"/g,v=>{let R=`__GO_STRING_${u++}__`;return i[R]=v,R}).replace(/'(?:[^'\\]|\\.)*'/g,v=>{let R=`__GO_RUNE_${u++}__`;return i[R]=v,R}).replace(/`(?:[a-zA-Z0-9_]+:"[^"]*")+`/g,v=>{let R=`__GO_STRUCT_TAG_${u++}__`;i[R]=v,t.push("struct_tag");let A=v.slice(1,-1).split(" ");for(let k of A){if(!k.trim())continue;let[D,ce]=k.split(":");if(D&&ce){t.push(`tag_${D}`);let le=ce.replace(/^"|"$/g,"");if(le)if(le.includes(",")){let sn=le.split(",");t.push(...sn)}else t.push(le)}}return R}).replace(/<-/g,v=>(t.push("channel_operation")," <- ")).replace(/\bgo\s+(?:func\b|[a-zA-Z_][a-zA-Z0-9_]*\s*\()/g,v=>{t.push("goroutine");let R=v.match(/go\s+([a-zA-Z_][a-zA-Z0-9_]*)/);return R&&R[1]&&t.push(R[1]),v}).replace(/\bselect\s*{[\s\S]*?}/g,v=>{t.push("select_statement");let R=v.match(/case\s+[^:]+:/g);if(R)for(let A of R){let k=A.slice(4,-1).trim(),D=I(k);t.push(...D)}return v}).replace(/\bdefer\s+[a-zA-Z_][a-zA-Z0-9_]*\s*\(/g,v=>{t.push("defer");let R=v.match(/defer\s+([a-zA-Z_][a-zA-Z0-9_]*)/);return R&&R[1]&&t.push(R[1]),v}).replace(/\btype\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+(?:struct|interface)\s*{[\s\S]*?}/g,(v,R)=>{if(t.push("type_declaration"),t.push(R),v.includes("struct")){t.push("struct_type");let A=v.match(/([a-zA-Z_][a-zA-Z0-9_]*)\s+([a-zA-Z_][a-zA-Z0-9_.*[\]]*)/g);if(A)for(let k of A){let D=k.trim().split(/\s+/);D.length>=2&&(t.push(D[0]),t.push(D[1]))}}else if(v.includes("interface")){t.push("interface_type");let A=v.match(/([a-zA-Z_][a-zA-Z0-9_]*)\s*\([\s\S]*?\)(?:\s*\([\s\S]*?\))?\s*[,{]/g);if(A)for(let k of A){let D=k.match(/([a-zA-Z_][a-zA-Z0-9_]*)/);D&&D[1]&&t.push(D[1])}}return v}),d=["make","new","len","cap","append","copy","delete","close","complex","real","imag","panic","recover"];for(let v of d){let R=new RegExp(`\\b${v}\\s*\\(`,"g");y=y.replace(R,A=>(t.push(`builtin_${v}`),A))}let T=["package","import","func","return","var","const","type","struct","interface","map","chan","go","select","case","default","defer","if","else","switch","for","range","continue","break","fallthrough","goto","nil","iota","true","false"];for(let v of T)new RegExp(`\\b${v}\\b`,"g").test(y)&&t.push(v);let S=I(y);t.push(...S);let b=[];for(let v of t){if(v.startsWith("__GO_")){b.push(v);continue}if(b.push(v),/[a-z][A-Z]/.test(v)){let R=v.replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().split(" ");R.length>1&&b.push(...R)}}let x=[];for(let v of b)if(i[v])if(v.startsWith("__GO_STRING_")){x.push("string_literal");let A=i[v].slice(1,-1);if(A.trim().length>0){let k=I(A);x.push(...k)}}else if(v.startsWith("__GO_RAW_STRING_")){x.push("raw_string_literal");let A=i[v].slice(1,-1);if(A.includes(`
`)){let k=A.split(`
`);for(let D of k)if(D.trim()){let ce=I(D.trim());x.push(...ce)}}else if(A.trim()){let k=I(A);x.push(...k)}}else v.startsWith("__GO_STRUCT_TAG_")?x.push("struct_tag"):v.startsWith("__GO_RUNE_")?x.push("rune_literal"):x.push(v);else if(n[v]){x.push("code_comment");let A=n[v].replace(/^\/\*|\*\/$/g,"").replace(/^\/\//g,"").split(/\s+/).filter(k=>/^[a-z0-9_]{3,}$/i.test(k)).map(k=>k.toLowerCase());x.push(...A)}else x.push(v);return[...new Set(x)]}function Ie(e){if(typeof e!="string")return"";let t=e.toLowerCase();if(t.length<=2)return t;if(t.endsWith("ing")){let n=t.slice(0,-3);return n.length>2?n:t}if(t.endsWith("ed")){let n=t.slice(0,-2);return n.length>2?n:t}return t.endsWith("s")&&!t.endsWith("ss")?t.slice(0,-1):t.endsWith("es")||t.endsWith("ly")||t.endsWith("er")?t.slice(0,-2):t}var F=Q(()=>{});import{v4 as wn}from"uuid";async function it(e,t,n,r=1,o={}){if(!e||!t||!n)throw new Error("Source entity ID, target entity ID, and relationship type are required");let s=wn(),i=JSON.stringify(o);try{await C(`
      INSERT INTO code_relationships (
        relationship_id, source_entity_id, target_entity_id, relationship_type, weight, metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[s,e,t,n,r,i])}catch(u){if(u.message&&u.message.includes("UNIQUE constraint failed"))await C(`
        UPDATE code_relationships 
        SET weight = ?, metadata = ? 
        WHERE source_entity_id = ? AND target_entity_id = ? AND relationship_type = ?
      `,[r,i,e,t,n]);else throw console.error(`Error adding relationship between ${e} and ${t}:`,u),u}}async function ue(e,t="outgoing",n=[]){if(!e)throw new Error("Entity ID is required");if(!["outgoing","incoming","both"].includes(t))throw new Error("Direction must be 'outgoing', 'incoming', or 'both'");let r=`
    SELECT 
      relationship_id, 
      source_entity_id, 
      target_entity_id, 
      relationship_type, 
      weight, 
      metadata
    FROM code_relationships
    WHERE 
  `,o=[];if(t==="outgoing"?(r+="source_entity_id = ?",o.push(e)):t==="incoming"?(r+="target_entity_id = ?",o.push(e)):(r+="(source_entity_id = ? OR target_entity_id = ?)",o.push(e,e)),n.length>0){let s=n.map(()=>"?").join(", ");r+=` AND relationship_type IN (${s})`,o.push(...n)}try{return(await C(r,o)).map(i=>({...i,metadata:i.metadata?JSON.parse(i.metadata):{}}))}catch(s){throw console.error(`Error getting relationships for entity ${e}:`,s),s}}var X=Q(()=>{N()});var z={};cn(z,{compressContext:()=>ze,manageTokenBudget:()=>Me,summarizeCodeEntity:()=>$e,summarizeText:()=>$});function Me(e,t,n=[]){if(!e||e.length===0)return[];let r=[],o=t,s=e.reduce((u,l)=>u+l.score,0),i=e.map(u=>Math.max(100,Math.floor(u.score/s*t)));for(let u=0;u<e.length;u++){let l=e[u],a=l.content||l.entity.raw_content||"";if(!a)continue;let m=Math.min(i[u],o);if(!(m<50)){if(a.length<=m)r.push({entity_id:l.entity.entity_id,summarizedContent:a,originalScore:l.score}),o-=a.length;else{let f;l.entity.entity_type?f=$e(l.entity,m,n):f=$(a,m),f&&(r.push({entity_id:l.entity.entity_id,summarizedContent:f,originalScore:l.score}),o-=f.length)}if(o<=50)break;if(u<e.length-1){let f=e.length-u-1,_=e.slice(u+1).reduce((h,w)=>h+w.score,0);for(let h=u+1;h<e.length;h++)i[h]=Math.max(100,Math.floor(e[h].score/_*o))}}}return o>200&&r.length>0&&xn(r,e,o,n),r}function xn(e,t,n,r){let o=new Map;e.forEach(u=>{o.set(u.entity_id,u)});let s=t.filter(u=>o.has(u.entity.entity_id)).sort((u,l)=>l.score-u.score),i=Math.floor(n/s.length);for(let u of s){let l=o.get(u.entity.entity_id),a=l.summarizedContent.length,m=a+i,f=u.content||u.entity.raw_content||"";if(f.length<=m)l.summarizedContent=f,n-=f.length-a;else{let _;u.entity.entity_type?_=$e(u.entity,m,r):_=$(f,m),_&&_.length>a&&(n-=_.length-a,l.summarizedContent=_)}if(n<100)break}}function $(e,t,n="rule-based"){return e?e.length<=t?e:(n==="ml-light"&&(console.log("ML-light summarization not fully implemented, falling back to rule-based method"),n="rule-based"),Ln(e,t)):""}function $e(e,t,n=[]){if(!e)return"";if(e.summary&&e.summary.length<=t)return e.summary;if(!e.raw_content)return`${e.name} (${e.entity_type})`;if(e.raw_content.length<=t)return e.raw_content;switch((e.entity_type||"").toLowerCase()){case"function":case"method":return bn(e,t,n);case"class":return Rn(e,t,n);case"file":return An(e,t,n);default:return $(e.raw_content,t)}}function bn(e,t,n){let o=e.raw_content.split(`
`),s=Nn(o);if(s.length>=t-10)return H(s,t);let i=Pe(o,n,"function"),u=s,l=t-s.length,a=kn(o);return a&&a.length<l*.4&&(u+=`
`+a,l-=a.length),u+=`
`+Fe(i,l),H(u,t)}function Rn(e,t,n){let o=e.raw_content.split(`
`),s=In(o),i=On(o),u=s,l=t-s.length;if(i&&i.length<l&&(u+=`
`+i,l-=i.length),l>50){let a=Pe(o,n,"class");u+=`
`+Fe(a,l)}return H(u,t)}function An(e,t,n){let r=e.raw_content,o=r.split(`
`);if((e.name||"").toLowerCase().includes("readme")||(e.name||"").toLowerCase().includes("doc"))return $(r,t);let i=o.filter(f=>f.trim().startsWith("import ")||f.trim().startsWith("require(")||f.trim().startsWith("from ")||f.trim().includes(" from ")).join(`
`),u=o.filter(f=>f.trim().startsWith("export ")||f.trim().startsWith("module.exports")).join(`
`),l=`// File: ${e.name||"Unnamed"}
`;i&&i.length<t*.3&&(l+=`// Imports:
${i}
`);let a=t-l.length;u&&u.length<a*.3&&(l+=`// Exports:
${u}
`);let m=t-l.length;if(m>100){let f=Pe(o,n,"file");l+=`// Key sections:
${Fe(f,m)}`}return H(l,t)}function Nn(e){for(let t=0;t<e.length;t++){let n=e[t].trim();if(n.match(/^(async\s+)?(function\s+\w+|\w+\s*=\s*(async\s+)?function|\w+\s*:\s*(async\s+)?function|const\s+\w+\s*=\s*(async\s+)?(\([^)]*\)|[^=]*)\s*=>)/)){let r=n;if(!n.includes("{")&&!n.includes("=>")){let o=t+1;for(;o<e.length&&!e[o].includes("{");)r+=" "+e[o].trim(),o++;o<e.length&&(r+=" "+e[o].trim().split("{")[0]+"{ ... }")}else n.includes("{")?r=r.split("{")[0]+"{ ... }":n.includes("=>")&&(r=r.split("=>")[0]+"=> { ... }");return r}}return"function() { ... }"}function In(e){for(let t=0;t<e.length;t++){let n=e[t].trim();if(n.startsWith("class ")){let r=n;if(n.includes("{"))r=r.split("{")[0]+"{ ... }";else{let o=t+1;for(;o<e.length&&!e[o].includes("{");)r+=" "+e[o].trim(),o++;o<e.length&&(r+=" "+e[o].trim().split("{")[0]+"{ ... }")}return r}}return"class { ... }"}function On(e){let t=[],n=/^\s*(async\s+)?(\w+)\s*\([^)]*\)/,r=Math.min(5,e.length);for(let o=r;o<e.length;o++){let s=e[o].match(n);s&&!e[o].trim().startsWith("//")&&t.push(s[2])}return t.length===0?"":`// Methods: ${t.join(", ")}`}function kn(e){let t=!1,n=[];for(let r=0;r<Math.min(20,e.length);r++){let o=e[r].trim();if(o.startsWith("/**")){t=!0,n.push(o);continue}if(t&&(n.push(o),o.endsWith("*/")))break;if(!t&&n.length===0&&o.startsWith("//"))n.push(o);else if(!t&&n.length>0&&o.startsWith("//"))n.push(o);else if(!t&&n.length>0)break}return n.join(`
`)}function Pe(e,t,n){let r=[],o={function:[/\breturn\s+/,/\bthrow\s+/,/\bif\s*\(/,/\bfor\s*\(/,/\bcatch\s*\(/,/\bswitch\s*\(/,/\bconst\s+\w+\s*=/,/\blet\s+\w+\s*=/,/\/\/ [A-Z]/],class:[/\bconstructor\s*\(/,/\bstatic\s+/,/\bget\s+\w+\s*\(/,/\bset\s+\w+\s*\(/,/\bextends\s+/,/\bimplements\s+/,/\breturn\s+/],file:[/\bexport\s+(default\s+)?function\s+/,/\bexport\s+(default\s+)?class\s+/,/\bexport\s+(default\s+)?const\s+/,/\bmodule\.exports\s*=/,/\bimport\s+/,/\brequire\s*\(/]},s=[/\/\/ TODO:/,/\/\/ FIXME:/,/\/\/ NOTE:/,/\/\*\*/],i=[...o[n]||[],...s];for(let u=0;u<e.length;u++){let l=e[u].trim();if(!l)continue;let a=0;if(t.length>0){let m=O(l,{includeIdentifiers:!0}),f=t.filter(_=>m.includes(_.toLowerCase())||l.toLowerCase().includes(_.toLowerCase()));a+=f.length*3}for(let m of i)if(m.test(l)){a+=2;break}u<5&&(a+=1),(l.includes("{")||l.includes("}"))&&(a+=.5),r.push({line:l,score:a,index:u})}return r.sort((u,l)=>l.score-u.score)}function Fe(e,t){let n=[],r=0,o=e.filter(s=>s.score>=3);for(let s of o)r+s.line.length+1<=t&&(n.push(s),r+=s.line.length+1);if(r<t){let s=e.filter(i=>i.score<3).sort((i,u)=>u.score-i.score);for(let i of s)r+i.line.length+1<=t&&(n.push(i),r+=i.line.length+1)}return n.sort((s,i)=>s.index-i.index),n.map(s=>s.line).join(`
`)}function Ln(e,t){let n=Dn(e);if(n.length<=3)return H(e,t);let r=n.map((u,l)=>({text:u,score:Mn(u,l,n.length),index:l}));r.sort((u,l)=>l.score-u.score);let o=[],s=0;for(let u of r)if(s+u.text.length+1<=t)o.push(u),s+=u.text.length+1;else{if(o.length===0)return H(u.text,t);break}o.sort((u,l)=>u.index-l.index);let i=o.map(u=>u.text).join(" ");return H(i,t)}function Dn(e){let t=/[^.!?]*[.!?](?:\s|$)/g,n=e.match(t);return n?n.map(r=>r.trim()).filter(r=>r.length>0):[e]}function Mn(e,t,n){let r=0;t===0?r+=3:t===n-1?r+=2:(t===1||t===n-2)&&(r+=1);let o=e.split(/\s+/).length;o>=5&&o<=20?r+=1:(o<3||o>30)&&(r-=1);let s=["key","important","significant","critical","essential","main","primary","crucial","fundamental","vital","result","conclude","summary","therefore","thus","implement","function","method","class","object","return","export","import","require","define"],i=e.toLowerCase();for(let u of s)if(i.includes(u)){r+=1;break}return(i.includes("function")||i.includes("class")||i.includes("=")||i.includes("return")||e.includes("()")||e.includes("{}")||e.includes("[]"))&&(r+=2),r}function H(e,t){if(e.length<=t)return e;for(let n=t-1;n>=0;n--)if(e[n]==="."||e[n]==="!"||e[n]==="?")return e.substring(0,n+1);for(let n=t-1;n>=0;n--)if(e[n]===" ")return e.substring(0,n)+"...";return e.substring(0,t-3)+"..."}async function ze(e,t={}){if(!e||e.length===0)return[];let n=t.detailLevel||"medium",r=t.targetTokens||2e3,o=t.queryKeywords||[],s=1/6,i=Math.floor(r/s),u=e.map(m=>({entity:{entity_id:m.entity_id,entity_type:m.type,raw_content:m.content,name:m.name,file_path:m.path},score:m.relevanceScore||.5,content:m.content})),l=i;switch(n){case"high":l=Math.floor(i*1.3);break;case"low":l=Math.floor(i*.7);break;default:break}return Me(u,l,o).map(m=>{let f=e.find(_=>_.entity_id===m.entity_id);return f?{...f,content:m.summarizedContent,compression:{originalLength:f.content.length,compressedLength:m.summarizedContent.length,compressionRatio:m.summarizedContent.length/f.content.length,detailLevel:n}}:null}).filter(Boolean)}var U=Q(()=>{F()});j();N();M();import{McpServer as Hr}from"@modelcontextprotocol/sdk/server/mcp.js";import{StdioServerTransport as Jr}from"@modelcontextprotocol/sdk/server/stdio.js";N();import"zod";import{v4 as rr}from"uuid";N();F();import{v4 as We}from"uuid";N();F();X();import{v4 as dt}from"uuid";import $n from"crypto";import gt from"path";import"acorn";N();M();import*as at from"acorn";async function ke(e,t){let n=process.env.MCP_MODE==="true";if(!e||e.trim()==="")return n||c("warn","Empty code content provided to buildAST"),null;let r=t?t.toLowerCase():"unknown";if(["javascript","typescript","js","ts","jsx","tsx"].includes(r))try{let s=at.parse(e,{ecmaVersion:"latest",sourceType:"module",locations:!0,ranges:!0,allowAwaitOutsideFunction:!0,allowImportExportEverywhere:!0,allowReserved:!0,allowReturnOutsideFunction:!1,allowSuperOutsideMethod:!1});return n||c("debug",`Successfully parsed ${r} code`,{bodyType:s.type,bodyLength:s.body?s.body.length:0}),s}catch(o){return n||c("error",`Error parsing ${r} code:`,{message:o.message,location:o.loc?`${o.loc.line}:${o.loc.column}`:"unknown"}),{error:!0,message:o.message,location:o.loc,type:"AST_PARSE_ERROR"}}else return n||c("info",`AST generation not supported for ${r}, using regex fallback`),null}N();F();async function V(e,t={}){try{if(!e||!Array.isArray(e)||e.length===0)throw new Error("Keywords array is required and cannot be empty");e.length===1&&/\s+(AND|OR|NOT|NEAR\/\d+)\s+/i.test(e[0])||(e=e.map(r=>r.trim()).filter(r=>r.length>0)),t={strategy:"combined",booleanOperator:"OR",limit:100,...t};let n=[];if((t.strategy==="fts"||t.strategy==="combined")&&(n=[...await Sn(e,t)]),t.strategy==="keywords"||t.strategy==="combined"||t.strategy==="fts"&&n.length===0){let r=await Tn(e,t);t.strategy==="combined"&&n.length>0?n=Cn(n,r):n=r}return t.minRelevance&&(n=n.filter(r=>r.relevanceScore>=t.minRelevance)),t.limit&&n.length>t.limit&&(n=n.slice(0,t.limit)),n}catch(n){throw console.error("Error in searchByKeywords:",n),n}}async function Sn(e,t){try{let n=e.map(a=>Ie(a.toLowerCase()).replace(/[\\"\(\)\[\]\{\}\^\$\+\*\?\.]/g,_=>`\\${_}`)),r=t.booleanOperator?.toUpperCase()==="AND"?"AND":"OR",o;if(t.useExactMatch)o=`"${n.join(" ")}"`;else if(t.useProximity&&n.length>1){let a=t.proximityDistance||10;o=`${n.join(` NEAR/${a} `)}`}else o=n.join(` ${r} `);e.length===1&&/\s+(AND|OR|NOT|NEAR\/\d+)\s+/i.test(e[0])&&(o=e[0]);let s=`
      SELECT
        e.*,
        fts.rank as relevance_score
      FROM
        code_entities_fts fts
      JOIN
        code_entities e ON fts.rowid = e.rowid
      WHERE
        fts.code_entities_fts MATCH ?
    `,i=[o];if(t.entityTypes&&t.entityTypes.length>0){let a=t.entityTypes.map(()=>"?").join(", ");s+=` AND e.entity_type IN (${a})`,i.push(...t.entityTypes)}if(t.filePaths&&t.filePaths.length>0){s+=" AND (";let a=[];for(let m of t.filePaths){let f=m.replace(/\*/g,"%").replace(/\?/g,"_");f=f.replace(/%\/%/g,"%"),a.push("e.file_path LIKE ?"),i.push(f)}s+=a.join(" OR "),s+=")"}t.dateRange&&(t.dateRange.start&&(s+=" AND e.last_modified_at >= ?",i.push(t.dateRange.start.toISOString())),t.dateRange.end&&(s+=" AND e.last_modified_at <= ?",i.push(t.dateRange.end.toISOString()))),t.customRanking?s+=` ORDER BY ${t.customRanking}`:s+=`
        ORDER BY 
          relevance_score * 
          CASE 
            WHEN e.entity_type = 'file' THEN 1.2
            WHEN e.entity_type = 'class' THEN 1.1
            WHEN e.entity_type = 'function' THEN 1.0
            ELSE 0.9
          END DESC
      `;let u=t.limit&&t.limit>0?t.limit:100;s+=" LIMIT ?",i.push(u);let l=await C(s,i);return lt(l)}catch(n){throw console.error("Error in searchUsingFTS:",n),n}}async function Tn(e,t){try{let n;e.length===1&&/\s+(AND|OR|NOT)\s+/i.test(e[0])?n=e[0].split(/\s+(?:AND|OR|NOT)\s+/i).map(l=>l.trim()).filter(l=>l.length>0):n=e;let r=n.map(l=>Ie(l.toLowerCase())),o=`
      SELECT 
        e.*,
        SUM(ek.weight * (1.0 + (0.1 * count_matches))) as relevance_score
      FROM (
        SELECT 
          entity_id, 
          COUNT(DISTINCT keyword) as count_matches,
          MAX(weight) as weight
        FROM 
          entity_keywords
        WHERE 
          keyword IN (${r.map(()=>"?").join(",")})
        GROUP BY 
          entity_id
      ) as ek
      JOIN 
        code_entities e ON ek.entity_id = e.entity_id
    `,s=[...r];o=vn(o,t,s),t.sortBy?o+=` ORDER BY e.${t.sortBy}`:o+=`
        ORDER BY 
          relevance_score * 
          CASE 
            WHEN e.entity_type = 'file' THEN 1.2
            WHEN e.entity_type = 'class' THEN 1.1
            WHEN e.entity_type = 'function' THEN 1.0
            ELSE 0.9
          END DESC
      `;let i=t.limit&&t.limit>0?t.limit:100;o+=" LIMIT ?",s.push(i);let u=await C(o,s);return lt(u)}catch(n){throw console.error("Error in searchUsingKeywords:",n),n}}function vn(e,t,n){if(t.entityTypes&&t.entityTypes.length>0){let r=t.entityTypes.map(()=>"?").join(", ");e+=` AND e.entity_type IN (${r})`,n.push(...t.entityTypes)}if(t.filePaths&&t.filePaths.length>0){e+=" AND (";let r=[];for(let o of t.filePaths){let s=o.replace(/\*/g,"%").replace(/\?/g,"_");s=s.replace(/%\/%/g,"%"),r.push("e.file_path LIKE ?"),n.push(s)}e+=r.join(" OR "),e+=")"}return t.dateRange&&(t.dateRange.start&&(e+=" AND e.last_modified_at >= ?",n.push(t.dateRange.start.toISOString())),t.dateRange.end&&(e+=" AND e.last_modified_at <= ?",n.push(t.dateRange.end.toISOString()))),e}function lt(e){let t=e&&e.rows&&Array.isArray(e.rows)?e.rows:Array.isArray(e)?e:[];return t.length===0?(console.warn("No valid search results found to map"),[]):t.map(n=>({entity:{entity_id:n.entity_id,file_path:n.file_path,entity_type:n.entity_type,name:n.name,parent_entity_id:n.parent_entity_id,content_hash:n.content_hash,raw_content:n.raw_content,start_line:n.start_line,end_line:n.end_line,language:n.language,created_at:n.created_at,last_modified_at:n.last_modified_at},relevanceScore:n.relevance_score}))}function Cn(e,t){let n=new Map;for(let r of e)n.set(r.entity.entity_id,r);for(let r of t){let o=r.entity.entity_id;if(n.has(o)){let s=n.get(o),i=s.relevanceScore*.7+r.relevanceScore*.3;n.set(o,{...s,relevanceScore:i})}else n.set(o,r)}return Array.from(n.values()).sort((r,o)=>o.relevanceScore-r.relevanceScore)}X();N();j();async function De(e){if(!e)return 1;try{let t={class:8,interface:7.5,function:7,method:6.5,file:6,variable:5,constant:5,comment_block:4},n=(e.entity_type||"").toLowerCase(),r=t[n]||5;if(e.raw_content){let i=e.raw_content.length,u=e.raw_content.split(`
`).length,l=Math.min(2,Math.log10(i/100))*.5;r+=l,(e.raw_content.includes("if")||e.raw_content.includes("for")||e.raw_content.includes("while")||e.raw_content.includes("switch"))&&(r+=.5)}try{let u=await C(`
        SELECT COUNT(*) as ref_count 
        FROM code_relationships 
        WHERE target_entity_id = ? AND relationship_type = 'references'
      `,[e.entity_id]);if(u&&u.rows&&u.rows.length>0){let l=parseInt(u.rows[0].ref_count)||0,a=Math.min(1.5,Math.log10(l+1));r+=a}}catch(i){console.warn(`Error fetching references for entity ${e.entity_id}:`,i.message)}let o=new Date;if(e.last_modified_at){let i=new Date(e.last_modified_at),u=(o-i)/(1e3*60*60*24),l=Math.max(0,1-u/30);r+=l}if(e.last_accessed_at){let i=new Date(e.last_accessed_at),u=(o-i)/(1e3*60*60*24),l=Math.max(0,.5-u/14*.5);r+=l}e.parent_entity_id||(r+=.5);let s=["main","index","core","app","server","controller","service"];return e.name&&s.some(i=>e.name.toLowerCase().includes(i))&&(r+=.5),Math.min(10,Math.max(0,r))}catch(t){return console.error(`Error calculating importance score for entity ${e.entity_id}:`,t),1}}async function ut(){try{let t=new Date(Date.now()-2592e6),n=`
      UPDATE code_entities 
      SET importance_score = importance_score * ? 
      WHERE last_accessed_at < ? 
      AND importance_score > ?
    `,r=[tt,t.toISOString(),.1],o=await C(n,r);console.log(`Applied decay to ${o.changes||0} entities`)}catch(e){throw console.error("Error applying decay to importance scores:",e),e}}M();function Pn(e){return $n.createHash("sha256").update(e).digest("hex")}function Fn(e){return gt.basename(e)}function zn(e,t){if(t)return t.toLowerCase();let n=gt.extname(e).toLowerCase();return{".js":"javascript",".jsx":"javascript",".ts":"typescript",".tsx":"typescript",".py":"python",".rb":"ruby",".java":"java",".go":"go",".rs":"rust",".php":"php",".c":"c",".cpp":"cpp",".h":"c",".hpp":"cpp",".cs":"csharp",".swift":"swift",".kt":"kotlin",".html":"html",".css":"css",".scss":"scss",".json":"json",".md":"markdown",".xml":"xml",".yaml":"yaml",".yml":"yaml"}[n]||"unknown"}function ft(e,t){return e.substring(0,t).split(`
`).length}function mt(e,t){let n=[],r={function:{python:/def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*:/g,ruby:/def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\([^)]*\))?\s*(do|\n)/g,java:/(public|private|protected|static|\s) +[\w\<\>\[\]]+\s+(\w+) *\([^\)]*\) *(\{?|[^;])/g,go:/func\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*(?:\([^)]*\))?\s*\{/g,php:/function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*\{/g,default:/function\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\([^)]*\)\s*\{/g},class:{python:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(\([^)]*\))?\s*:/g,ruby:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*((<|::)\s*[A-Za-z0-9_:]*)?/g,java:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*(implements\s+[A-Za-z0-9_,\s]+)?\s*\{/g,go:/type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+struct\s*\{/g,php:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*(implements\s+[A-Za-z0-9_,\s]+)?\s*\{/g,default:/class\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(extends\s+[A-Za-z0-9_]+)?\s*\{/g},variable:{python:/(^|\s)([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!==)/g,ruby:/(^|\s)([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!=)/g,java:/(private|protected|public|static|\s) +[\w\<\>\[\]]+\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*[^;]+;/g,go:/var\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+[\w\[\]]+(\s*=\s*[^;]+)?/g,php:/(\$[a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(?!=)/g,default:/(const|let|var)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*[^;]+;/g}},o=r.function[t]||r.function.default,s;for(;(s=o.exec(e))!==null;){let u=s[1]||s[2],l=s.index,a=ft(e,l),m=a+10;n.push({type:"function",name:u,start_position:l,start_line:a,end_line:m,raw_content:e.substring(l,l+s[0].length+100)})}let i=r.class[t]||r.class.default;for(;(s=i.exec(e))!==null;){let u=s[1],l=s.index,a=ft(e,l),m=a+20;n.push({type:"class",name:u,start_position:l,start_line:a,end_line:m,raw_content:e.substring(l,l+s[0].length+500)})}return n}function Un(e,t){let n=process.env.MCP_MODE==="true",r=[],o=[],s=new Map,i=t.split(`
`);if(!e||e.error)return n||c("warn","Invalid AST provided to extractEntitiesFromAST",{error:e&&e.error?e.message:"No AST provided"}),{entities:r,relationships:o};function u(a,m,f,_,h,w,E,g=null,y={}){let d={type:a,name:m,start_position:f,end_position:_,start_line:h,end_line:w,raw_content:E,parent:g,custom_metadata:y};return r.push(d),n||c("debug",`Extracted ${a} entity: ${m}`,{lines:`${h}-${w}`,size:E.length}),d}function l(a,m=null,f=null,_=null){if(!a||typeof a!="object")return;let h=_;switch(a.type){case"Program":a.body&&Array.isArray(a.body)&&a.body.forEach(w=>l(w,a,f,"global"));break;case"FunctionDeclaration":{let w=a.id?a.id.name:"anonymous",E=a.loc.start.line,g=a.loc.end.line,y=a.start,d=a.end,T=t.substring(y,d),S=a.params.map(x=>x.name||"unnamed"),b=u("function",w,y,d,E,g,T,f,{params:S});f&&o.push({source:f,target:b,type:"contains"}),a.body&&l(a.body,a,b,w)}break;case"ClassDeclaration":case"ClassExpression":{let w=a.id?a.id.name:"AnonymousClass",E=a.loc.start.line,g=a.loc.end.line,y=a.start,d=a.end,T=t.substring(y,d),S=u("class",w,y,d,E,g,T,f);f&&o.push({source:f,target:S,type:"contains"}),a.body&&a.body.body&&a.body.body.forEach(b=>{l(b,a,S,w)})}break;case"MethodDefinition":{let w=a.key.name||a.key.value||"unnamed",E=a.loc.start.line,g=a.loc.end.line,y=a.start,d=a.end,T=t.substring(y,d),S=u("method",w,y,d,E,g,T,f,{kind:a.kind});f&&o.push({source:f,target:S,type:"contains"}),a.value&&a.value.body&&l(a.value.body,a,S,`${_}.${w}`)}break;case"ArrowFunctionExpression":case"FunctionExpression":if(m&&(m.type==="VariableDeclarator"||m.type==="AssignmentExpression")){let w="anonymous";m.id&&m.id.name?w=m.id.name:m.left&&m.left.name&&(w=m.left.name);let E=a.loc.start.line,g=a.loc.end.line,y=a.start,d=a.end,T=t.substring(y,d),S=u("function",w,y,d,E,g,T,f);a.body&&l(a.body,a,S,w)}else a.body&&l(a.body,a,f,_);break;case"BlockStatement":a.body&&Array.isArray(a.body)&&a.body.forEach(w=>l(w,a,f,_));break;case"VariableDeclaration":a.declarations&&a.declarations.forEach(w=>l(w,a,f,_));break;case"VariableDeclarator":a.init&&l(a.init,a,f,_);break;case"ExportNamedDeclaration":case"ExportDefaultDeclaration":a.declaration&&l(a.declaration,a,f,_);break;default:for(let w in a)if(a.hasOwnProperty(w)){let E=a[w];E&&typeof E=="object"&&(Array.isArray(E)?E.forEach(g=>l(g,a,f,_)):l(E,a,f,_))}break}}return l(e),{entities:r,relationships:o}}async function ht(e,t,n){try{let r=process.env.MCP_MODE==="true";r||c("info",`Indexing code file ${e}`);let o=Pn(t),s=Fn(e),i=zn(e,n),u=await C("SELECT entity_id, content_hash FROM code_entities WHERE file_path = ? AND entity_type = 'file'",[e]),l;if(u.rows&&u.rows.length>0){if(l=u.rows[0].entity_id,u[0].content_hash===o)return c("info",`File ${e} is unchanged, skipping indexing`),l;await C(`
        UPDATE code_entities SET
          raw_content = ?,
          content_hash = ?,
          language = ?,
          last_modified_at = CURRENT_TIMESTAMP
        WHERE entity_id = ?
      `,[t,o,i,l]),await C(`
        DELETE FROM code_entities
        WHERE parent_entity_id = ?
      `,[l])}else{l=dt();let f=1;try{f=await De({entity_id:l,entity_type:"file",file_path:e,name:s,raw_content:t,language:i})}catch(_){r||c("warn",`Error calculating importance score for ${e}: ${_.message}`)}await C(`
        INSERT INTO code_entities (
          entity_id,
          file_path,
          entity_type,
          name,
          content_hash,
          raw_content,
          language,
          importance_score
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `,[l,e,"file",s,o,t,i,f])}let a=[],m=[];if(i==="javascript"||i==="typescript")try{let f=ke(t,i),{entities:_,entityRelationships:h}=Un(f,t);a=_,m=h}catch(f){r||(c("warn",`Error parsing ${i} file ${e}: ${f.message}`),a=mt(t,i))}else a=mt(t,i);for(let f of a){let _=dt();f.id=_;let h=1;try{let E={entity_id:_,entity_type:f.type,file_path:e,name:f.name,raw_content:f.raw_content,start_line:f.start_line,end_line:f.end_line,language:i,parent_entity_id:l};h=await De(E)}catch(E){r||c("warn",`Error calculating importance score for entity ${f.name}: ${E.message}`)}let w=null;try{let{summarizeCodeEntity:E}=await Promise.resolve().then(()=>(U(),z)),g={entity_type:f.type,name:f.name,raw_content:f.raw_content};w=E(g,1e3),!r&&w&&c("debug",`Generated summary for ${f.type} '${f.name}' (${w.length} chars)`)}catch(E){r||c("warn",`Error generating summary for entity ${f.name}: ${E.message}`)}await C(`
        INSERT INTO code_entities (
          entity_id,
          parent_entity_id,
          file_path,
          entity_type,
          name,
          start_line,
          end_line,
          raw_content,
          language,
          summary,
          importance_score
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `,[_,l,e,f.type,f.name,f.start_line,f.end_line,f.raw_content,i,w,h]);try{let E=L(f.raw_content);for(let g of E)await C(`
            INSERT INTO entity_keywords (
              entity_id,
              keyword,
              term_frequency,
              keyword_type
            ) VALUES (?, ?, ?, ?)
            ON CONFLICT(entity_id, keyword, keyword_type) DO UPDATE SET
              term_frequency = excluded.term_frequency
          `,[_,g.term,g.frequency,"extracted"])}catch(E){r||c("warn",`Error extracting keywords for ${f.name}: ${E.message}`)}}for(let f of m)try{f.source&&f.target&&await it(f.source.id,f.target.id,f.type,f.metadata)}catch(_){r||c("warn",`Error saving relationship: ${_.message}`)}return l}catch(r){throw process.env.MCP_MODE==="true"?new Error:new Error(`Error indexing file ${e}: ${r.message}`)}}async function yt(e){try{if(c("debug","===== INDEX MESSAGE - START ====="),c("debug","Input parameters:",{message_id:e.message_id,conversation_id:e.conversation_id,role:e.role,content_length:e.content?e.content.length:0,timestamp:e.timestamp}),!e.message_id||!e.conversation_id||!e.role||!e.content)throw new Error("Message object missing required properties");let t=e.relatedContextEntityIds?e.relatedContextEntityIds:null,n=e.semantic_markers?e.semantic_markers:null,r=e.sentiment_indicators?e.sentiment_indicators:null,o=e.timestamp instanceof Date?e.timestamp.toISOString():e.timestamp||new Date().toISOString(),s=`
      SELECT message_id FROM conversation_history 
      WHERE message_id = ?
    `;c("debug","Checking if message exists:",{message_id:e.message_id});let i=await C(s,[e.message_id]);if(c("debug","Existing message check result:",{result:JSON.stringify(i)}),i&&i.rows&&i.rows.length>0){c("debug","Updating existing message:",{message_id:e.message_id});try{let a=`UPDATE conversation_history 
         SET content = ?, 
             summary = ?, 
             user_intent = ?, 
             topic_segment_id = ?, 
             related_context_entity_ids = ?, 
             semantic_markers = ?, 
             sentiment_indicators = ?
         WHERE message_id = ?`,m=[e.content,e.summary||null,e.userIntent||null,e.topicSegmentId||null,t,n,r,e.message_id];c("debug","Update query parameters:",{message_id:e.message_id,content_length:e.content?e.content.length:0});let f=await C(a,m);c("debug","Message update result:",{result:JSON.stringify(f)})}catch(a){throw c("error","Update error:",{error:a}),a}}else{c("debug","Inserting new message:",{message_id:e.message_id});try{let a=`INSERT INTO conversation_history (
          message_id, 
          conversation_id, 
          role, 
          content, 
          timestamp, 
          summary, 
          user_intent, 
          topic_segment_id, 
          related_context_entity_ids, 
          semantic_markers, 
          sentiment_indicators
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,m=[e.message_id,e.conversation_id,e.role,e.content,o,e.summary||null,e.userIntent||null,e.topicSegmentId||null,t,n,r];c("debug","Insert query parameters:",{message_id:e.message_id,conversation_id:e.conversation_id,role:e.role,timestamp:o});let f=await C(a,m);c("debug","Message insert result:",{result:JSON.stringify(f)})}catch(a){throw c("error","Insert error:",{error:a}),c("error","Error stack:",{stack:a.stack}),a}}let u=O(e.content),l=L(u);return c("debug","===== INDEX MESSAGE - COMPLETE ====="),c("info","Successfully indexed message:",{message_id:e.message_id}),{messageId:e.message_id,keywords:l}}catch(t){throw c("error","===== INDEX MESSAGE - ERROR ====="),c("error",`Error indexing message ${e?.message_id}:`,{error:t.message}),c("error","Error stack:",{stack:t.stack}),t}}F();N();U();import{v4 as Bn}from"uuid";var qn=["anyway","moving on","changing subject","regarding","switching to","on another note","back to","speaking of","about","let's talk about","with respect to","turning to","shifting to","let's discuss","instead"],Wn=["what","how","why","can","could","would","should","is","are","do","does","did","have","has","will"];async function Et(e,t){try{if(!e?.content||!t||t.length===0)return!1;let n=t.slice(-5),r=jn(e,n),o=Gn(e,n),s=Xn(e.content),i=Hn(e,n);return r*.4+o*.3+(s?.8:0)*.2+i*.1>.45}catch(n){return console.error("Error detecting topic shift:",n),!1}}function jn(e,t){let n=O(e.content),r=L(n,10),o=new Set(r);if(o.size===0)return 0;let s=new Set;for(let u of t){let l=O(u.content);L(l,10).forEach(m=>s.add(m))}let i=0;for(let u of o)s.has(u)||i++;return i/o.size}function Gn(e,t){if(!e.entity_ids||!Array.isArray(e.entity_ids)||e.entity_ids.length===0)return 0;let n=new Set;for(let o of t)o.entity_ids&&Array.isArray(o.entity_ids)&&o.entity_ids.forEach(s=>n.add(s));if(n.size===0)return e.entity_ids.length>0?1:0;let r=0;for(let o of e.entity_ids)n.has(o)||r++;return r/e.entity_ids.length}function Xn(e){if(!e)return!1;let t=e.toLowerCase();for(let n of qn)if(new RegExp(`\\b${n}\\b`,"i").test(t))return!0;return!1}function Hn(e,t){if(!Ue(e.content))return 0;let r=0,o=0;for(let s=0;s<t.length-1;s++)t[s].role==="user"&&Ue(t[s].content)&&(r++,s+1<t.length&&t[s+1].role==="assistant"&&o++);if(r>0&&o>0){let s=Qn(t,i=>i.role==="user"&&Ue(i.content));if(s>=0){let i=t[s].content;return Jn(e.content,i)}}return .2}function Ue(e){if(!e)return!1;if(e.includes("?"))return!0;let t=e.toLowerCase().trim();for(let n of Wn)if(t.startsWith(n+" "))return!0;return!1}function Jn(e,t){let n=O(e),r=O(t),o=new Set(n),s=new Set(r),i=0;for(let a of o)s.has(a)&&i++;let u=o.size+s.size-i;return 1-(u>0?i/u:0)}function Qn(e,t){for(let n=e.length-1;n>=0;n--)if(t(e[n]))return n;return-1}async function pe(e,t,n={}){try{let r=Bn(),o=n.name;if(!o){o=`New Topic ${new Date().toISOString()}`;try{let f=await C("SELECT content FROM conversation_history WHERE message_id = ?",[t]);if(f&&f.length>0){let _=f[0].content,h=_.split(/\s+/).slice(0,5).join(" ");h.length>3&&(o=`Topic: ${h}${h.length<_.length?"...":""}`)}}catch(m){console.warn("Could not fetch message content for topic naming:",m)}}let s=n.primaryEntities?JSON.stringify(n.primaryEntities):"[]",i=n.keywords?JSON.stringify(n.keywords):"[]",u=new Date().toISOString();await C("PRAGMA foreign_keys = OFF;");let l=`
      INSERT INTO conversation_topics (
        topic_id,
        conversation_id,
        topic_name,
        description,
        start_message_id,
        start_timestamp,
        primary_entities,
        keywords
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,a=[r,e,o,n.description||"",t,u,s,i];return await C(l,a),await C("PRAGMA foreign_keys = ON;"),console.log(`Created new topic segment: ${o} (${r})`),r}catch(r){throw console.error("Error creating new topic segment:",r),new Error(`Failed to create new topic segment: ${r.message}`)}}async function wt(e,t){try{let r=new Date().toISOString();try{let u=await C("SELECT timestamp FROM conversation_history WHERE message_id = ?",[t]);u&&u.length>0&&u[0].timestamp&&(r=u[0].timestamp)}catch(i){console.warn("Could not fetch message timestamp, using current timestamp:",i)}await C(`
      UPDATE conversation_topics
      SET end_message_id = ?,
          end_timestamp = ?
      WHERE topic_id = ?
    `,[t,r,e]),console.log(`Closed topic segment: ${e} with end message: ${t}`)}catch(n){throw console.error(`Error closing topic segment ${e}:`,n),new Error(`Failed to close topic segment: ${n.message}`)}}async function de(e){try{let n=await C(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
        AND end_message_id IS NULL
      ORDER BY start_timestamp DESC
      LIMIT 1
    `,[e]);if(!n.rows||n.rows.length===0)return null;let r=n.rows[0];try{let o={...r};return r.keywords&&typeof r.keywords=="string"&&(o.keywords=JSON.parse(r.keywords)),r.related_entities&&typeof r.related_entities=="string"&&(o.related_entities=JSON.parse(r.related_entities)),r.primary_entities&&typeof r.primary_entities=="string"&&(o.primary_entities=JSON.parse(r.primary_entities)),o}catch(o){return console.error(`Error parsing JSON fields for topic ${r.topic_id}:`,o),r}}catch(t){throw console.error(`Error getting active topic for conversation ${e}:`,t),t}}async function St(e){try{if(!e||e.length===0)return"Untitled Topic";let n=`
      SELECT content, related_context_entity_ids
      FROM conversation_history 
      WHERE message_id IN (${e.map(()=>"?").join(",")})
      ORDER BY timestamp ASC
    `,r=await C(n,e);if(!r||r.length===0)return"Untitled Topic";let o=r.map(a=>a.content).join(" "),s=O(o),i=L(s,3),u=new Set;for(let a of r)if(a.related_context_entity_ids){let m;try{if(m=typeof a.related_context_entity_ids=="string"?JSON.parse(a.related_context_entity_ids):a.related_context_entity_ids,Array.isArray(m)&&m.length>0){let f=f.slice(0,2),_=`
              SELECT name FROM code_entities WHERE id IN (${f.map(()=>"?").join(",")})
            `,h=await C(_,f);h&&h.length>0&&h.forEach(w=>u.add(w.name))}}catch(f){console.warn("Error parsing entity IDs",f)}}let l;if(u.size>0)l=`Discussion about ${Array.from(u).slice(0,2).join(" and ")}`;else if(i.length>0)l=`Topic: ${i.join(", ")}`;else{let a=r[0].content,m=a.split(/\s+/).slice(0,5).join(" ");l=`Topic: ${m}${a.length>m.length?"...":""}`}return l.length>50&&(l=l.substring(0,47)+"..."),l}catch(t){return console.error("Error generating topic name:",t),"Untitled Topic"}}async function Tt(e){try{let n=await C(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
      ORDER BY start_timestamp ASC
    `,[e]);if(!n||n.length===0)return{rootTopics:[],topicMap:{}};let r={};for(let s of n)try{s.primary_entities=s.primary_entities?JSON.parse(s.primary_entities):[],s.keywords=s.keywords?JSON.parse(s.keywords):[],s.children=[],r[s.topic_id]=s}catch(i){console.warn(`Error parsing JSON fields for topic ${s.topic_id}:`,i),s.primary_entities=[],s.keywords=[],s.children=[],r[s.topic_id]=s}let o=[];for(let s of n)s.parent_topic_id&&r[s.parent_topic_id]?r[s.parent_topic_id].children.push(s):o.push(s);return{rootTopics:o,topicMap:r}}catch(t){throw console.error(`Error building topic hierarchy for conversation ${e}:`,t),new Error(`Failed to build topic hierarchy: ${t.message}`)}}F();N();import{v4 as Kn}from"uuid";var fe={debugging:{keywords:["error","stacktrace","bug","fix","not working","exception","issue","failed","failing","crash","debug","broken","incorrect","problem","trouble","unexpected","diagnose","investigate"],patterns:[/TypeError:/i,/Error:/i,/Exception:/i,/failed with/i,/doesn't work/i,/not working/i,/unexpected behavior/i],weight:1},feature_planning:{keywords:["requirement","design","new feature","implement","proposal","roadmap","spec","specification","plan","architecture","blueprint","feature","enhancement","improvement","add","create","develop","extend"],patterns:[/could we add/i,/we need to implement/i,/design for/i,/planning to/i,/we should build/i,/requirement is to/i],weight:.9},code_review:{keywords:["PR","pull request","LGTM","suggestion","change request","review","approve","feedback","comment","revision","looks good","merge","style","convention","readability","clarity"],patterns:[/pull request #\d+/i,/PR #\d+/i,/please review/i,/looks good to me/i,/suggested changes/i,/can you review/i],weight:.85},learning:{keywords:["learn","understand","explanation","tutorial","example","how does","what is","meaning","concept","definition","help me understand","documentation","guide","explain","clarify","teach"],patterns:[/how does (it|this) work/i,/what (is|does|are)/i,/could you explain/i,/I'm trying to understand/i,/explain how/i],weight:.8},code_generation:{keywords:["generate","create","build","write","implement","code for","function","class","method","module","script","algorithm","solution"],patterns:[/can you (write|create|generate)/i,/implement a/i,/create a function/i,/generate code for/i,/need code to/i],weight:.9},optimization:{keywords:["optimize","performance","efficiency","slow","faster","speed up","reduce","improve","bottleneck","memory","CPU","utilization","profiling","benchmark"],patterns:[/too slow/i,/needs to be faster/i,/performance issue/i,/optimize for/i,/reduce (memory|time|usage)/i],weight:.85},refactoring:{keywords:["refactor","restructure","rewrite","reorganize","clean up","improve","modernize","update","simplify","decouple","modularity","readability"],patterns:[/need to refactor/i,/code smells/i,/technical debt/i,/simplify the code/i,/make it more maintainable/i],weight:.8},general_query:{keywords:["question","ask","wondering","curious","thoughts","opinion","advice","suggestion","recommend","help","guidance"],patterns:[/I have a question/i,/can you help/i,/what do you think/i,/do you have any advice/i],weight:.7}};async function Be(e){try{if(!e)return{purposeType:"general_query",confidence:.5};let t=Array.isArray(e)?e:[e];if(t.length===0)return{purposeType:"general_query",confidence:.5};let n="",r=t.map(_=>({role:_.role||(_.messageId,"user"),content:_.content||""})),o=r.filter(_=>_.role==="user");o.length>0?n=o.map(_=>_.content).join(" "):n=r.map(_=>_.content).join(" ");let s=O(n),i=L(s,20),u={};for(let[_,h]of Object.entries(fe)){let w=0;for(let E of h.keywords)n.toLowerCase().includes(E.toLowerCase())&&(w+=1),i.some(g=>typeof g=="string"&&g.toLowerCase()===E.toLowerCase())&&(w+=2);for(let E of h.patterns)E.test(n)&&(w+=3);w*=h.weight,u[_]=w}let l=0,a="general_query";for(let[_,h]of Object.entries(u))h>l&&(l=h,a=_);let m=fe[a].keywords.length*3+fe[a].patterns.length*3,f=.3+.7*(l/(m*fe[a].weight));return f=Math.min(f,1),l<3&&a!=="general_query"?{purposeType:"general_query",confidence:.6}:{purposeType:a,confidence:f}}catch(t){return console.error("Error detecting conversation purpose:",t),{purposeType:"general_query",confidence:.5}}}async function ee(e){try{let n=await C(`
      SELECT * FROM conversation_purposes
      WHERE conversation_id = ?
        AND end_timestamp IS NULL
      ORDER BY start_timestamp DESC
      LIMIT 1
    `,[e]),r=n&&n.rows&&Array.isArray(n.rows)?n.rows:Array.isArray(n)?n:[];return r.length===0?null:r[0]}catch(t){throw console.error(`Error getting active purpose for conversation ${e}:`,t),new Error(`Failed to get active purpose: ${t.message}`)}}async function qe(e,t,n,r,o=.7){try{let s=await ee(e);if(s&&s.purpose_type!==n){let f=new Date().toISOString();await C(`
        UPDATE conversation_purposes
        SET end_timestamp = ?
        WHERE purpose_id = ?
      `,[f,s.purpose_id]),console.log(`Closed purpose ${s.purpose_type} for conversation ${e}`)}else if(s&&s.purpose_type===n)return s.purpose_id;let i=Kn(),u=new Date().toISOString(),l=r?JSON.stringify({trigger_message_id:r}):null;return await C(`
      INSERT INTO conversation_purposes (
        purpose_id,
        conversation_id,
        purpose_type,
        confidence,
        start_timestamp,
        metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[i,e,n,o,u,l]),console.log(`Created new purpose record: ${n} (${i}) for conversation ${e}`),i}catch(s){throw console.error(`Error tracking purpose transition for conversation ${e}:`,s),new Error(`Failed to track purpose transition: ${s.message}`)}}async function Ct(e,t){try{let r=await Be([{content:t,role:"user"}]);(!r||!r.purposeType)&&(r.purposeType="general_query",r.confidence=.5);try{await qe(e,r.purposeType,r.purposeType,null,r.confidence),console.log(`Initial purpose for conversation ${e}: ${r.purposeType} (${r.confidence})`)}catch(o){console.error("Error tracking purpose transition:",o),console.log("Continuing with initialization despite purpose tracking error")}return r}catch(n){return console.error("Error detecting initial purpose:",n),{purposeType:"general_query",confidence:.5}}}U();M();async function bt(e,t,n,r=[],o,s){try{let i=We(),u=new Date().toISOString();c("info","===== RECORD MESSAGE - START ====="),c("info","Input parameters:"),c("info","- message_id:",i),c("info","- conversation_id:",n),c("info","- role:",t),c("info","- content:",e&&e.substring(0,50)+(e.length>50?"...":"")),c("info","- timestamp:",u),c("info","- topic_segment_id:",o||"null"),c("info","- user_intent:",s||"null"),c("info","- related_context_entity_ids:",JSON.stringify(r||[]));let l=[];t==="user"&&Ne?l=Ne(e,"plaintext")||[]:(e.includes("!")&&l.push("emphasis"),e.includes("?")&&l.push("question"));let a=["great","good","excellent","awesome","love","like","well done","thanks","thank you","perfect","amazing","fantastic","nice","happy","success","yay"],m=["bad","error","fail","hate","problem","issue","bug","broken","wrong","difficult","hard","annoy","frustrate","sad","unhappy","disappoint","no","not working","doesn't work","crash","stuck"],f=a.filter(E=>e.toLowerCase().includes(E)),_=m.filter(E=>e.toLowerCase().includes(E)),h={positive_keywords:f,negative_keywords:_},w={message_id:i,conversation_id:n,role:t,content:e,timestamp:u,relatedContextEntityIds:JSON.stringify(r||[]),summary:null,userIntent:s||null,topicSegmentId:o||null,semantic_markers:JSON.stringify(l),sentiment_indicators:JSON.stringify(h)};return c("info","Message object to be indexed:",{message_id:w.message_id,conversation_id:w.conversation_id,role:w.role,topic_segment_id:w.topicSegmentId,user_intent:w.userIntent}),await yt(w),c("info","===== RECORD MESSAGE - COMPLETE ====="),c("info","Successfully recorded message with ID:",i),i}catch(i){throw c("error","===== RECORD MESSAGE - ERROR ====="),c("error","Failed to record message:",{error:i.message}),c("error","Error stack:",{stack:i.stack}),new Error("Failed to record message: "+i.message)}}async function Rt(e,t){let n=await P(t,10);return await Et({content:e,role:"user"},n)}async function je(e,t=!1){try{if(t)return await Tt(e);let r=await C(`
      SELECT * FROM conversation_topics
      WHERE conversation_id = ?
      ORDER BY start_timestamp ASC
    `,[e]);return!r||!r.rows||r.rows.length===0?(c("info",`No topics found for conversation: ${e}`),[]):r.rows.map(o=>{let s={...o};try{s.primary_entities=o.primary_entities?JSON.parse(o.primary_entities):[],s.keywords=o.keywords?JSON.parse(o.keywords):[]}catch(i){c("warn",`Error parsing JSON fields in topic: ${i.message}`),s.primary_entities=[],s.keywords=[]}return s})}catch(n){return c("warn","Failed to retrieve conversation topics",{error:n.message,conversationId:e}),[]}}async function At(e){let n=await C(`
    SELECT role, content FROM conversation_history
    WHERE conversation_id = ?
    ORDER BY timestamp ASC
  `,[e]);if(!n||!n.rows||!Array.isArray(n.rows)||n.rows.length===0)return c("warn",`No valid messages found for conversation ${e}`),"";let r=n.rows.map(s=>`${s.role}: ${s.content}`).join(`
`);return await $(r,{targetLength:250,preserveKeyPoints:!0})}async function Nt(e,t){try{let n=new Date().toISOString(),r=null;t&&t.trim()&&(r=We(),await C(`
        INSERT INTO conversation_history (
          message_id,
          conversation_id, 
          role,
          content,
          timestamp,
          related_context_entity_ids,
          summary,
          user_intent
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `,[r,e,"user",t,n,JSON.stringify([]),"Initial user query","start_conversation"]),c("info",`User query recorded with ID: ${r}`));let o=We();await C(`
      INSERT INTO conversation_history (
        message_id,
        conversation_id, 
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `,[o,e,"system",t?"Conversation started with query":"Conversation started",n,JSON.stringify([]),"Conversation initialization","start_conversation"]),t&&await Ct(e,t),await pe(e,r||o,{name:"Initial conversation",description:t||"Conversation start",primaryEntities:[],keywords:[]}),c("info",`Conversation initialized with ID: ${e}`)}catch(n){throw c("error","Error initializing conversation:",{error:n.message}),new Error("Failed to initialize conversation: "+n.message)}}async function P(e,t=50,n=0){try{if(!e)throw new Error("Conversation ID is required");let o=await C(`
      SELECT 
        message_id,
        conversation_id,
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent,
        topic_segment_id,
        semantic_markers,
        sentiment_indicators
      FROM 
        conversation_history
      WHERE 
        conversation_id = ?
      ORDER BY 
        timestamp ASC
      LIMIT ? OFFSET ?
    `,[e,t,n]);return!o||!o.rows||!Array.isArray(o.rows)?(c("warn","No valid rows returned from conversation history query"),[]):o.rows.map(s=>{try{let i={messageId:s.message_id,conversationId:s.conversation_id,role:s.role,content:s.content,timestamp:s.timestamp,relatedContextEntityIds:[],summary:s.summary,userIntent:s.user_intent,topicSegmentId:s.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}};return s.related_context_entity_ids&&(i.relatedContextEntityIds=JSON.parse(s.related_context_entity_ids)),s.semantic_markers&&(i.semanticMarkers=JSON.parse(s.semantic_markers)),s.sentiment_indicators&&(i.sentimentIndicators=JSON.parse(s.sentiment_indicators)),i}catch(i){return c("error","Error parsing JSON fields in conversation message:"),c("error",i),{messageId:s.message_id,conversationId:s.conversation_id,role:s.role,content:s.content,timestamp:s.timestamp,relatedContextEntityIds:[],summary:s.summary,userIntent:s.user_intent,topicSegmentId:s.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}}}})}catch(r){return c("error",`Error getting conversation history for ${e}:`),c("error",r),[]}}async function It(e){try{if(!e)throw new Error("Conversation ID is required");let t=await ee(e);return t||{purposeType:"general_query",confidence:.5,startTimestamp:new Date().toISOString()}}catch(t){return c("error",`Error getting conversation purpose for ${e}:`),c("error",t),{purposeType:"general_query",confidence:.5,startTimestamp:new Date().toISOString()}}}async function me(e,t=5){try{if(!e)throw new Error("Conversation ID is required");let r=await C(`
      SELECT 
        message_id,
        conversation_id,
        role,
        content,
        timestamp,
        related_context_entity_ids,
        summary,
        user_intent,
        topic_segment_id,
        semantic_markers,
        sentiment_indicators
      FROM 
        conversation_history
      WHERE 
        conversation_id = ?
      ORDER BY 
        timestamp DESC
      LIMIT ?
    `,[e,t]);return!r||!r.rows||!Array.isArray(r.rows)?(c("warn","No valid rows returned from recent messages query"),[]):r.rows.map(o=>{try{let s={messageId:o.message_id,conversationId:o.conversation_id,role:o.role,content:o.content,timestamp:o.timestamp,relatedContextEntityIds:[],summary:o.summary,userIntent:o.user_intent,topicSegmentId:o.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}};return o.related_context_entity_ids&&(s.relatedContextEntityIds=JSON.parse(o.related_context_entity_ids)),o.semantic_markers&&(s.semanticMarkers=JSON.parse(o.semantic_markers)),o.sentiment_indicators&&(s.sentimentIndicators=JSON.parse(o.sentiment_indicators)),s}catch(s){return c("error","Error parsing JSON fields in conversation message:"),c("error",s),{messageId:o.message_id,conversationId:o.conversation_id,role:o.role,content:o.content,timestamp:o.timestamp,relatedContextEntityIds:[],summary:o.summary,userIntent:o.user_intent,topicSegmentId:o.topic_segment_id,semanticMarkers:[],sentimentIndicators:{}}}})}catch(n){return c("error",`Error getting recent messages for ${e}:`),c("error",n),[]}}U();F();N();import{v4 as Zn}from"uuid";N();import{v4 as Ot}from"uuid";async function B(e,t,n=[],r=null){try{let o=Ot(),s=JSON.stringify(t),i=JSON.stringify(n),u=Date.now();return await C(`
      INSERT INTO timeline_events (
        event_id, 
        event_type, 
        timestamp, 
        data, 
        associated_entity_ids,
        conversation_id
      ) VALUES (?, ?, ?, ?, ?, ?)
    `,[o,e,u,s,i,r]),o}catch(o){throw console.error(`Error recording timeline event (${e}):`,o),o}}async function kt(e,t=null,n=null,r=null){try{let o=Ot(),s=JSON.stringify(e);return await C(`
      INSERT INTO context_snapshots (
        snapshot_id,
        name,
        description,
        snapshot_data,
        timeline_event_id
      ) VALUES (?, ?, ?, ?, ?)
    `,[o,t,n,s,r]),o}catch(o){throw console.error("Error creating context snapshot:",o),o}}async function q(e={}){try{let{types:t,limit:n,conversationId:r,includeMilestones:o=!0,excludeConversationId:s}=e,i="SELECT * FROM timeline_events WHERE 1=1",u=[];if(t&&t.length>0&&(i+=` AND event_type IN (${t.map(()=>"?").join(",")})`,u.push(...t)),r&&(i+=" AND conversation_id = ?",u.push(r)),s&&(i+=" AND (conversation_id != ? OR conversation_id IS NULL)",u.push(s)),!o){let m=["milestone_created","implicit_checkpoint_creation","checkpoint_created"];i+=` AND event_type NOT IN (${m.map(()=>"?").join(",")})`,u.push(...m),i+=` AND NOT EXISTS (
        SELECT 1 FROM context_snapshots 
        WHERE context_snapshots.timeline_event_id = timeline_events.event_id
      )`}i+=" ORDER BY timestamp DESC",n&&Number.isInteger(n)&&n>0&&(i+=" LIMIT ?",u.push(n));let l=await C(i,u),a=l&&l.rows&&Array.isArray(l.rows)?l.rows:Array.isArray(l)?l:[];return a.length===0?(console.warn("No valid timeline events found"),[]):a.map(m=>({...m,data:JSON.parse(m.data||"{}"),associated_entity_ids:JSON.parse(m.associated_entity_ids||"[]")}))}catch(t){throw console.error("Error retrieving timeline events:",t),t}}async function Lt(e,t=10,n=null){try{if(!e)throw new Error("Conversation ID is required");let r=`
      SELECT 
        event_id,
        event_type,
        timestamp,
        data,
        associated_entity_ids,
        conversation_id
      FROM 
        timeline_events
      WHERE 
        conversation_id = ?
    `,o=[e];if(n&&Array.isArray(n)&&n.length>0){let u=n.map(()=>"?").join(",");r+=` AND event_type IN (${u})`,o.push(...n)}r+=`
      ORDER BY 
        timestamp DESC
      LIMIT ?
    `,o.push(t);let s=await C(r,o),i=s&&s.rows&&Array.isArray(s.rows)?s.rows:Array.isArray(s)?s:[];return i.length===0?(console.warn("No recent events found for conversation:",e),[]):i.map(u=>({...u,data:JSON.parse(u.data||"{}"),associated_entity_ids:JSON.parse(u.associated_entity_ids||"[]")}))}catch(r){return console.error(`Error getting recent events for conversation ${e}:`,r),[]}}function ge(e,t=[]){let n={GENERAL_QUERY:"general_query",CODE_SEARCH:"code_search",EXPLANATION_REQUEST:"explanation_request",DEBUGGING_ASSIST:"debugging_assist",REFACTORING_SUGGESTION:"refactoring_suggestion",IMPLEMENTATION_REQUEST:"implementation_request",DOCUMENTATION_REQUEST:"documentation_request"},r={[n.GENERAL_QUERY]:.1,[n.CODE_SEARCH]:0,[n.EXPLANATION_REQUEST]:0,[n.DEBUGGING_ASSIST]:0,[n.REFACTORING_SUGGESTION]:0,[n.IMPLEMENTATION_REQUEST]:0,[n.DOCUMENTATION_REQUEST]:0},o=e.toLowerCase(),s=O(e),i=L(s);o.includes("?")&&(r[n.EXPLANATION_REQUEST]+=.3);let u=[/```[\s\S]*?```/,/function\s+\w+\s*\(.*?\)/,/const|let|var\s+\w+\s*=/,/class\s+\w+/,/import\s+.*?from/];for(let f of u)if(f.test(e)){r[n.CODE_SEARCH]+=.2,r[n.DEBUGGING_ASSIST]+=.2;break}let l=[{patterns:["find","search","where is","locate","look for"],intent:n.CODE_SEARCH,score:.6},{patterns:["explain","how does","what is","why","how to","tell me about"],intent:n.EXPLANATION_REQUEST,score:.6},{patterns:["error","bug","issue","problem","fix","debug","not working","exception","fail"],intent:n.DEBUGGING_ASSIST,score:.7},{patterns:["refactor","improve","optimize","clean","better way","restructure","revise"],intent:n.REFACTORING_SUGGESTION,score:.65},{patterns:["implement","create","make","build","develop","code","add","new feature"],intent:n.IMPLEMENTATION_REQUEST,score:.6},{patterns:["document","comment","describe","explain code","documentation"],intent:n.DOCUMENTATION_REQUEST,score:.55}];for(let{patterns:f,intent:_,score:h}of l)for(let w of f)if(o.includes(w)){r[_]+=h;break}if(t&&t.length>0){let f=t.slice(-3).filter(_=>_.content);for(let _ of f){let h=_.content.toLowerCase();/error|bug|issue|problem|fix|debug|not working|exception|fail/.test(h)&&(r[n.DEBUGGING_ASSIST]+=.2),/refactor|improve|optimize|clean|better|restructure|architecture/.test(h)&&(r[n.REFACTORING_SUGGESTION]+=.2),/explain|how does|what is|why|how to|understand/.test(h)&&(r[n.EXPLANATION_REQUEST]+=.15)}}let a=0,m=n.GENERAL_QUERY;for(let[f,_]of Object.entries(r))_>a&&(a=_,m=f);return{intent:m,keywords:i}}async function Ge(e=[],t=[]){try{let n=new Map,r=new Map,o=new Map,s=new Set;for(let h of e){if(o.set(h.event_type,(o.get(h.event_type)||0)+1),h.data&&h.data.path){let w=h.data.path;n.set(w,(n.get(w)||0)+1);let E=w.split("/");for(let g=1;g<E.length;g++){let y=E.slice(0,g).join("/");y&&n.set(y,(n.get(y)||0)+.3)}}if(h.associated_entity_ids&&h.associated_entity_ids.length>0)for(let w of h.associated_entity_ids)r.set(w,(r.get(w)||0)+1);if(h.data&&typeof h.data=="object"){let w=[h.data.description,h.data.message,h.data.content,h.data.query].filter(Boolean);for(let E of w)if(E&&typeof E=="string"){let g=O(E);L(g).forEach(d=>s.add(d))}}}for(let h of t){let w=h.path;n.set(w,(n.get(w)||0)+3);let E=w.split("/");for(let g=1;g<E.length;g++){let y=E.slice(0,g).join("/");y&&n.set(y,(n.get(y)||0)+.5)}if(h.content){let g=O(h.content);L(g).forEach(d=>s.add(d))}}let i="",u=0,l="file";for(let[h,w]of n.entries())w>u&&(u=w,i=h,l=h.includes(".")&&!h.endsWith("/")?"file":"directory");if(!i&&o.size>0){let h="";u=0;for(let[w,E]of o.entries())E>u&&(u=E,h=w);h&&(i=`activity:${h}`,l="task_type")}if(!i)return null;let a="";l==="file"?a=`Working on file ${i}`:l==="directory"?a=`Working in directory ${i}`:a=`${i.replace("activity:","")} activity`;let m=Array.from(r.entries()).sort((h,w)=>w[1]-h[1]).slice(0,10).map(([h])=>h),f=Array.from(s).slice(0,20),_={focus_id:Zn(),focus_type:l,identifier:i,description:a,related_entity_ids:JSON.stringify(m),keywords:JSON.stringify(f),last_activated_at:Date.now(),is_active:!0};try{await Yn(_)}catch(h){console.error("Error updating focus area in database:",h)}return _}catch(n){return console.error("Error predicting focus area:",n),null}}async function Yn(e){try{let t=typeof e.related_entity_ids=="string"?e.related_entity_ids:JSON.stringify(e.related_entity_ids||[]),n=typeof e.keywords=="string"?e.keywords:JSON.stringify(e.keywords||[]),r=e.last_activated_at||Date.now();await C("BEGIN TRANSACTION");try{await C("UPDATE focus_areas SET is_active = FALSE WHERE is_active = TRUE");let o=await C("SELECT focus_id FROM focus_areas WHERE identifier = ?",[e.identifier]);o&&o.length>0?await C(`UPDATE focus_areas SET 
            focus_type = ?,
            description = ?,
            related_entity_ids = ?,
            keywords = ?,
            last_activated_at = ?,
            is_active = TRUE
          WHERE focus_id = ?`,[e.focus_type,e.description,t,n,r,o[0].focus_id]):await C(`INSERT INTO focus_areas (
            focus_id,
            focus_type,
            identifier,
            description,
            related_entity_ids,
            keywords,
            last_activated_at,
            is_active
          ) VALUES (?, ?, ?, ?, ?, ?, ?, TRUE)`,[e.focus_id,e.focus_type,e.identifier,e.description,t,n,r]),await C("COMMIT")}catch(o){throw await C("ROLLBACK"),o}}catch(t){throw console.error("Error updating focus area in database:",t),t}}async function Xe(e){try{let{conversationId:t,newMessage:n,isUser:r=!1,activeFile:o,codeChanges:s=[]}=e,i=null,u=!1,l=null;if(n&&r){let _=(await C(`SELECT content, role, timestamp 
         FROM conversation_history 
         WHERE conversation_id = ? 
         ORDER BY timestamp DESC 
         LIMIT 5`,[t])).map(d=>({content:d.content,role:d.role}));_.unshift({content:n,role:"user"});let{intent:h,keywords:w}=ge(n,_),E=await C("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1"),g=null;if(E&&E.length>0){let d=E[0];g={...d,related_entity_ids:JSON.parse(d.related_entity_ids||"[]"),keywords:JSON.parse(d.keywords||"[]")}}let y=.5;if(h!=="general_query"&&g&&(y=.7,g.keywords&&w)){let d=w.filter(T=>g.keywords.includes(T));d.length>0&&(y+=Math.min(.3,d.length*.05))}i={intent:h,confidence:y,keywords:w,focusArea:g}}let a=[];o&&a.push({path:o}),s&&s.length>0&&a.push(...s);let m=await q({limit:20,types:["code_change","file_open","cursor_move","navigation"]});if(a.length>0||m.length>0){let f=await Ge(m,a);if(f)u=!0,l=f;else{let _=await C("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1");if(_&&_.length>0){let h=_[0];l={...h,related_entity_ids:JSON.parse(h.related_entity_ids||"[]"),keywords:JSON.parse(h.keywords||"[]")}}}}else{let f=await C("SELECT * FROM focus_areas WHERE is_active = TRUE LIMIT 1");if(f&&f.length>0){let _=f[0];l={..._,related_entity_ids:JSON.parse(_.related_entity_ids||"[]"),keywords:JSON.parse(_.keywords||"[]")}}}return i&&!i.focusArea&&l&&(i.focusArea=l),{newIntent:i,focusUpdated:u,currentFocus:l}}catch(t){return console.error("Error updating intent:",t),{focusUpdated:!1}}}N();U();var ne=new Set,he=null,ie=[];function J(){return he}function ye(e){he=e,e&&Array.isArray(e.related_entity_ids)&&Je(e.related_entity_ids,[])}function Je(e=[],t=[]){let n={timestamp:Date.now()};e.length>0&&(e.forEach(r=>ne.add(r)),n.added=[...e]),t.length>0&&(t.forEach(r=>ne.delete(r)),n.removed=[...t]),(e.length>0||t.length>0)&&(ie.push(n),ie.length>50&&ie.shift())}function Vn(){return[...ne]}function re(){ne.clear(),he=null,ie.push({timestamp:Date.now(),event:"clear_context"})}async function Qe(){let e=Vn();if(e.length===0)return[];try{let n=`SELECT * FROM code_entities WHERE id IN (${e.map(()=>"?").join(",")})`;return await C(n,e)}catch(t){return console.error("Error retrieving active context entities:",t),[]}}async function _e(){try{let e=await Qe(),t=J(),n=ie.slice(-10);return{activeEntityIds:[...ne],activeFocus:t,entities:e,recentChanges:n,timestamp:Date.now()}}catch(e){return console.error("Error getting active context state:",e),{activeEntityIds:[...ne],activeFocus:he,entities:[],recentChanges:[],timestamp:Date.now(),error:e.message}}}N();import{v4 as er}from"uuid";async function we(e={}){try{let{type:t,minConfidence:n,limit:r,language:o}=e,s="SELECT * FROM project_patterns WHERE is_global = TRUE",i=[];t&&(s+=" AND pattern_type = ?",i.push(t)),n!==void 0&&!isNaN(n)&&(s+=" AND confidence_score >= ?",i.push(n)),o&&(s+=" AND (language = ? OR language = ? OR language IS NULL)",i.push(o,"any")),s+=" ORDER BY confidence_score DESC, utility_score DESC",r!==void 0&&!isNaN(r)&&r>0&&(s+=" LIMIT ?",i.push(r));let u=await C(s,i),l=u&&u.rows&&Array.isArray(u.rows)?u.rows:Array.isArray(u)?u:[];return l.length===0?(console.warn("No valid global patterns found"),[]):l.map(a=>({...a,detection_rules:JSON.parse(a.detection_rules||"{}"),is_global:!!a.is_global}))}catch(t){throw console.error("Error retrieving global patterns:",t),new Error(`Failed to retrieve global patterns: ${t.message}`)}}async function Se(e,t){try{let n="UPDATE project_patterns SET is_global = TRUE",r=[];t!==void 0&&!isNaN(t)&&(n+=", confidence_score = ?",r.push(t));let o=new Date().toISOString();n+=", updated_at = ?",r.push(o),n+=" WHERE pattern_id = ?",r.push(e);let i=(await C(n,r)).affectedRows>0;return i?(console.log(`Pattern ${e} successfully promoted to global status`),t!==void 0&&console.log(`Updated confidence score to ${t}`)):console.warn(`No pattern with ID ${e} found to promote`),i}catch(n){throw console.error(`Error promoting pattern ${e} to global:`,n),new Error(`Failed to promote pattern: ${n.message}`)}}async function Ke(e,t,n={}){try{let r=er(),o=new Date().toISOString(),s=JSON.stringify(n||{}),i={usage:.03,confirmation:.05,rejection:-.08},u={usage:.04,confirmation:.03,rejection:-.02};await C("BEGIN TRANSACTION");try{await C(`
        INSERT INTO pattern_observations (
          observation_id,
          pattern_id,
          observation_type,
          observation_data,
          timestamp
        ) VALUES (?, ?, ?, ?, ?)
      `,[r,e,t,s,o]);let m=await C("SELECT confidence_score, utility_score, reinforcement_count FROM project_patterns WHERE pattern_id = ?",[e]);if(m.length===0)throw new Error(`Pattern with ID ${e} not found`);let f=m[0],_=f.confidence_score+(i[t]||0),h=f.utility_score+(u[t]||0);_=Math.max(0,Math.min(1,_)),h=Math.max(0,Math.min(1,h));let w=`
        UPDATE project_patterns SET
          reinforcement_count = reinforcement_count + 1,
          confidence_score = ?,
          utility_score = ?,
          updated_at = ?
      `,E=t==="usage"?", last_detected_at = ?":"",g=[_,h,o];t==="usage"&&g.push(o);let y=w+E+" WHERE pattern_id = ?";g.push(e),await C(y,g),await C("COMMIT"),console.log(`Pattern ${e} reinforced with '${t}' observation`)}catch(l){throw await C("ROLLBACK"),l}}catch(r){throw console.error(`Error reinforcing pattern ${e}:`,r),new Error(`Failed to reinforce pattern: ${r.message}`)}}function tr(e,t){let n=0,r=0,o=0,s=1;o=e.pattern_type===t.pattern_type?1:.3,e.language&&t.language?e.language==="any"||t.language==="any"?s=.9:e.language!==t.language&&(s=.2):(e.language||t.language)&&(s=.7),n=Dt(Ee(e.representation),Ee(t.representation)),r=Dt(Ee(e.detection_rules),Ee(t.detection_rules));let i=n*.5+r*.3+s*.15+o*.05;return Math.max(0,Math.min(1,i))}function Ee(e){if(!e)return[];let t=e;if(typeof e=="string"&&(e.startsWith("{")||e.startsWith("[")))try{let n=JSON.parse(e);t=JSON.stringify(n,null,0).toLowerCase()}catch{t=e.toLowerCase()}else typeof e=="object"?t=JSON.stringify(e,null,0).toLowerCase():t=String(e).toLowerCase();return t.split(/[^a-z0-9_]+/).filter(n=>n.length>1).map(n=>n.trim())}function Dt(e,t){if(!e.length&&!t.length)return 1;if(!e.length||!t.length)return 0;let n=new Set(e),r=new Set(t),o=0;for(let i of n)r.has(i)&&o++;let s=n.size+r.size-o;return o/s}async function nr(e={}){try{let{minReinforcementCount:t=3,minConfidence:n=.6,similarityThreshold:r=.8}=e;console.log(`Starting pattern consolidation process (minReinforcementCount=${t}, minConfidence=${n})`);let o=0,s=0,u=await C(`
      SELECT * FROM project_patterns 
      WHERE is_global = FALSE 
      AND reinforcement_count >= ? 
      AND confidence_score >= ?
    `,[t,n]);if(console.log(`Found ${u.length} session patterns that qualify for promotion or merging`),u.length===0)return{promoted:0,merged:0};let l=await we();for(let a of u){let m=a.pattern_id,f=!0,_=null;for(let h of l)if(tr(a,h)>=r){f=!1,_=h;break}f?(console.log(`Promoting session pattern ${m} to global status`),await Se(m,a.confidence_score)&&(o++,console.log(`Successfully promoted pattern ${m}`))):_&&(console.log(`Merge attempt for pattern ${m} with ${_.pattern_id}`),s++)}return console.log(`Pattern consolidation complete. Promoted: ${o}, Merged: ${s}`),{promoted:o,merged:s}}catch(t){throw console.error("Error consolidating session patterns:",t),new Error(`Failed to consolidate session patterns: ${t.message}`)}}function Mt(e=60){let t=e*60*1e3;return console.log(`Scheduling pattern consolidation to run every ${e} minutes`),setInterval(async()=>{console.log(`Running scheduled pattern consolidation (interval: ${e} minutes)`);try{let r=await nr({minReinforcementCount:5,minConfidence:.7});console.log(`Pattern consolidation completed: ${r.promoted} patterns promoted, ${r.merged} patterns merged`)}catch(r){console.error("Error during scheduled pattern consolidation:",r)}},t)}j();import{z as p}from"zod";var $t={initialQuery:p.string().optional(),focusHint:p.object({type:p.string(),identifier:p.string()}).optional(),includeArchitecture:p.boolean().optional().default(!0),includeRecentConversations:p.boolean().optional().default(!0),maxCodeContextItems:p.number().optional().default(5),maxRecentChanges:p.number().optional().default(5),contextDepth:p.enum(["minimal","standard","comprehensive"]).optional().default("standard"),tokenBudget:p.number().optional().default(W)},Pt={conversationId:p.string(),initialContextSummary:p.string(),predictedIntent:p.string().optional(),comprehensiveContext:p.object({codeContext:p.array(p.any()).optional(),architectureContext:p.object({summary:p.string(),sources:p.array(p.object({name:p.string(),path:p.string()}))}).nullable(),recentConversations:p.array(p.object({timestamp:p.number(),summary:p.string(),purpose:p.string()})).optional(),activeWorkflows:p.array(p.object({name:p.string(),description:p.string(),timestamp:p.number()})).optional(),projectStructure:p.any().nullable(),recentChanges:p.array(p.object({timestamp:p.number(),files:p.array(p.string()),summary:p.string()})).optional(),globalPatterns:p.array(p.object({name:p.string(),type:p.string(),description:p.string(),confidence:p.number()})).optional()}).optional()},Ft={conversationId:p.string(),newMessages:p.array(p.object({role:p.enum(["user","assistant","system"]),content:p.string()})).optional().default([]),codeChanges:p.array(p.object({filePath:p.string(),newContent:p.string(),languageHint:p.string().optional()})).optional().default([]),preserveContextOnTopicShift:p.boolean().optional().default(!0),contextIntegrationLevel:p.enum(["minimal","balanced","aggressive"]).optional().default("balanced"),trackIntentTransitions:p.boolean().optional().default(!0),tokenBudget:p.number().optional().default(W)},zt={status:p.enum(["success","partial","failure"]),updatedFocus:p.object({type:p.string(),identifier:p.string()}).optional(),contextContinuity:p.object({preserved:p.boolean(),topicShift:p.boolean(),intentTransition:p.boolean()}),contextSynthesis:p.object({summary:p.string(),topPriorities:p.array(p.string()).optional()}).optional(),intentTransition:p.object({from:p.string().nullable(),to:p.string().nullable(),confidence:p.number()}).optional()},Ut={conversationId:p.string(),query:p.string(),tokenBudget:p.number().optional().default(W),constraints:p.object({entityTypes:p.array(p.string()).optional(),filePaths:p.array(p.string()).optional(),includeConversation:p.boolean().optional().default(!0),crossTopicSearch:p.boolean().optional().default(!1),focusOverride:p.object({type:p.string(),identifier:p.string()}).optional()}).optional().default({}),contextFilters:p.object({minRelevanceScore:p.number().optional().default(.3),excludeTypes:p.array(p.string()).optional(),preferredLanguages:p.array(p.string()).optional(),timeframe:p.object({from:p.number().optional(),to:p.number().optional()}).optional()}).optional().default({}),weightingStrategy:p.enum(["relevance","recency","hierarchy","balanced"]).optional().default("balanced"),balanceStrategy:p.enum(["proportional","equal_representation","priority_based"]).optional().default("proportional"),contextBalance:p.union([p.enum(["auto","code_heavy","balanced","documentation_focused"]),p.object({code:p.number().optional(),conversation:p.number().optional(),documentation:p.number().optional(),patterns:p.number().optional()})]).optional().default("auto"),sourceTypePreferences:p.object({includePatterns:p.boolean().optional().default(!0),includeDocumentation:p.boolean().optional().default(!0),prioritizeTestCases:p.boolean().optional().default(!1),prioritizeExamples:p.boolean().optional().default(!1)}).optional().default({})},Bt={contextSnippets:p.array(p.object({type:p.string(),content:p.string(),entity_id:p.string(),relevanceScore:p.number(),confidenceScore:p.number(),metadata:p.any(),sourceAttribution:p.string(),relevanceExplanation:p.string()})),retrievalSummary:p.string(),contextMetrics:p.object({totalFound:p.number(),selected:p.number(),averageConfidence:p.number(),typeDistribution:p.object({code:p.number(),conversation:p.number(),documentation:p.number(),pattern:p.number()})}).optional()},qt={conversationId:p.string(),name:p.string(),description:p.string().optional(),customData:p.any().optional(),milestoneCategory:p.enum(["bug_fix","feature_completion","refactoring","documentation","test","configuration","uncategorized"]).optional().default("uncategorized"),assessImpact:p.boolean().optional().default(!0)},Wt={milestoneId:p.string(),status:p.string(),milestoneCategory:p.string(),relatedEntitiesCount:p.number(),impactAssessment:p.object({impactScore:p.number(),impactLevel:p.string(),impactSummary:p.string(),scopeMetrics:p.object({directlyModifiedEntities:p.number(),potentiallyImpactedEntities:p.number(),impactedComponents:p.number(),criticalPathsCount:p.number()}).optional(),stabilityRisk:p.number().optional(),criticalPaths:p.array(p.object({sourceId:p.string(),path:p.string(),dependencyCount:p.number()})).optional(),mostImpactedComponents:p.array(p.object({name:p.string(),count:p.number()})).optional(),error:p.string().optional()}).nullable()},jt={conversationId:p.string(),clearActiveContext:p.boolean().optional().default(!1),extractLearnings:p.boolean().optional().default(!0),promotePatterns:p.boolean().optional().default(!0),synthesizeRelatedTopics:p.boolean().optional().default(!0),generateNextSteps:p.boolean().optional().default(!0),outcome:p.enum(["completed","abandoned","paused","reference_only"]).optional().default("completed")},Gt={status:p.string(),summary:p.string(),purpose:p.string(),extractedLearnings:p.object({learnings:p.array(p.object({type:p.string(),content:p.string(),confidence:p.number(),patternId:p.string().optional(),context:p.array(p.any()).optional(),messageReference:p.string().optional(),relatedIssues:p.array(p.any()).optional(),alternatives:p.array(p.string()).optional(),rationale:p.string().optional(),codeReferences:p.array(p.any()).optional(),applicability:p.number().optional()})),count:p.number(),byType:p.record(p.string(),p.number()),averageConfidence:p.number(),error:p.string().optional()}).nullable(),promotedPatterns:p.object({promoted:p.number(),patterns:p.array(p.object({patternId:p.string(),name:p.string(),type:p.string(),promoted:p.boolean(),confidence:p.number()})),error:p.string().optional()}).nullable(),relatedConversations:p.object({relatedCount:p.number(),conversations:p.array(p.object({conversationId:p.string(),summary:p.string(),timestamp:p.number(),similarityScore:p.number(),commonTopics:p.array(p.string())})),synthesizedInsights:p.array(p.object({topic:p.string(),insight:p.string(),conversationCount:p.number(),sourceSummaries:p.array(p.object({conversationId:p.string(),summary:p.string()}))})),error:p.string().optional()}).nullable(),nextSteps:p.object({suggestedNextSteps:p.array(p.object({action:p.string(),priority:p.enum(["high","medium","low"]),rationale:p.string()})),followUpTopics:p.array(p.object({topic:p.string(),priority:p.enum(["high","medium","low"]),rationale:p.string()})),referenceMaterials:p.array(p.object({title:p.string(),path:p.string(),type:p.string(),relevance:p.number()})),error:p.string().optional()}).nullable()};M();async function or(e,t){try{c("INFO","initialize_conversation_context tool started",{initialQuery:e.initialQuery});let n=e.conversationId||rr();c("DEBUG",`Using conversation ID: ${n}`);let{initialQuery:r="",focusHint:o,includeArchitecture:s=!0,includeRecentConversations:i=!0,maxCodeContextItems:u=5,maxRecentChanges:l=5,contextDepth:a="standard",tokenBudget:m=4e3}=e;try{await re(),o&&(await ye(o.type,o.identifier),c("INFO","Set initial focus",{type:o.type,identifier:o.identifier}))}catch(g){c("WARN","Failed to set initial focus, continuing with initialization",{error:g.message,focusHint:o})}try{await B("conversation_started",{initialQuery:r,focusHint:o,contextDepth:a},[],n),c("DEBUG","Recorded conversation start in timeline",{conversationId:n})}catch(g){c("WARN","Failed to record conversation start in timeline",{error:g.message,conversationId:n})}try{c("INFO",`Initializing conversation intelligence tracker with user query: "${r}"`,{conversationId:n}),await Nt(n,r);let g=await me(n,3);c("INFO",`Conversation initialized with ${g.length} messages`,{messages:g.map(y=>({role:y.role,content:y.content.substring(0,50)+(y.content.length>50?"...":"")}))})}catch(g){throw c("ERROR","Failed to initialize conversation intelligence",{error:g.message,conversationId:n}),new Error(`Conversation intelligence initialization failed: ${g.message}`)}let f="";if(r)try{let g=await ge(r);f=g.intent,c("INFO","Predicted initial intent",{intent:f,confidence:g.confidence||"N/A"})}catch(g){c("WARN","Intent prediction failed, continuing without intent",{error:g.message,initialQuery:r})}c("INFO","Starting comprehensive context gathering",{conversationId:n,includeArchitecture:s,maxCodeContextItems:u,contextDepth:a});let _=await sr(r,o,n,{includeArchitecture:s,includeRecentConversations:i,maxCodeContextItems:u,maxRecentChanges:l,contextDepth:a,tokenBudget:m}),h={codeContextItems:_.codeContext?.length||0,architectureItems:_.architectureContext?.length||0,recentChanges:_.recentChanges?.length||0,patterns:_.globalPatterns?.length||0};c("INFO","Comprehensive context gathered successfully",h);let w=fr(_,r,f);c("INFO","Generated initial context summary",{summaryLength:w?.length||0});let E={message:`Conversation context initialized with ID: ${n}`,conversationId:n,initialContextSummary:w,predictedIntent:f,comprehensiveContext:_};return{content:[{type:"text",text:JSON.stringify(E)}]}}catch(n){c("ERROR","Error in initialize_conversation_context tool",{error:n.message,stack:n.stack,input:{initialQuery:e.initialQuery,focusHint:e.focusHint,contextDepth:e.contextDepth}});let r={error:!0,errorCode:n.code||"INITIALIZATION_FAILED",errorDetails:n.message};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function sr(e,t,n,r){let o={};try{if(c("DEBUG","Starting to gather code context",{initialQuery:e?.substring(0,50),focusHint:t}),o.codeContext=await ir(e,t,r),c("DEBUG","Gathered code context",{itemCount:o.codeContext?.length||0}),r.includeArchitecture)try{o.architectureContext=await ar(r),c("DEBUG","Gathered architecture context",{itemCount:o.architectureContext?.length||0})}catch(s){c("WARN","Failed to gather architecture context",{error:s.message}),o.architectureContext=null}else o.architectureContext=null;try{o.projectStructure=await cr(),c("DEBUG","Gathered project structure",{directoryCount:o.projectStructure?.directories?.length||0,fileCount:o.projectStructure?.files?.length||0})}catch(s){c("WARN","Failed to gather project structure",{error:s.message}),o.projectStructure={directories:[],files:[]}}if(r.includeRecentConversations)try{o.recentConversations=await lr(r),c("DEBUG","Gathered recent conversations",{count:o.recentConversations?.length||0})}catch(s){c("WARN","Failed to gather recent conversations",{error:s.message}),o.recentConversations=[]}try{o.recentChanges=await ur(r.maxRecentChanges),c("DEBUG","Gathered recent changes",{count:o.recentChanges?.length||0})}catch(s){c("WARN","Failed to gather recent changes",{error:s.message}),o.recentChanges=[]}try{o.activeWorkflows=await pr(),c("DEBUG","Gathered active workflows",{count:o.activeWorkflows?.length||0})}catch(s){c("WARN","Failed to gather active workflows",{error:s.message}),o.activeWorkflows=[]}try{o.globalPatterns=await dr(e,r),c("DEBUG","Gathered global patterns",{count:o.globalPatterns?.length||0})}catch(s){c("WARN","Failed to gather global patterns",{error:s.message}),o.globalPatterns=[]}return o}catch(s){throw c("ERROR","Error gathering comprehensive context",{error:s.message,conversationId:n}),s}}async function ir(e,t,n){try{let r={limit:n.maxCodeContextItems*2};t&&(t.type==="file"||t.type==="directory")&&(r.filePaths=[t.identifier]);let o=e?await mr(e):["README","main","index","config"],i=(await V(o,r)).map(a=>({entity_id:a.entity.entity_id,path:a.entity.file_path,type:a.entity.entity_type,name:a.entity.name,content:a.entity.raw_content,relevanceScore:a.relevanceScore}));i=i.slice(0,n.maxCodeContextItems);let u={detailLevel:n.contextDepth,targetTokens:Math.floor(n.tokenBudget*.6)};return await ze(i,u)}catch(r){return console.error(`[gatherCodeContext] Error: ${r.message}`),[]}}async function ar(e){try{let t=await V(["README","documentation","architecture","overview","guide","setup"],{limit:5,strategy:"keywords"});if(t.length===0)return null;let n=t.map(i=>({name:i.entity.name,path:i.entity.file_path})),r=t.map(i=>i.entity.raw_content).join(`

`),o={detailLevel:e.contextDepth,targetTokens:Math.floor(e.tokenBudget*.2)};return{summary:r.length>1e3?r.substring(0,1e3)+"...":r,sources:n}}catch(t){return console.error(`[gatherArchitectureContext] Error: ${t.message}`),null}}async function cr(){try{let t=await C(`
      SELECT 
        file_path,
        COUNT(*) as file_count
      FROM 
        code_entities
      WHERE 
        entity_type = 'file'
      GROUP BY 
        SUBSTR(file_path, 1, INSTR(file_path, '/'))
      ORDER BY 
        file_count DESC
      LIMIT 10
    `),n=t&&t.rows&&Array.isArray(t.rows)?t.rows:Array.isArray(t)?t:[];return n.length===0?{topLevelDirs:[],totalFiles:0}:{topLevelDirs:n.map(r=>({path:r.file_path.split("/")[0],fileCount:r.file_count})),totalFiles:n.reduce((r,o)=>r+o.file_count,0)}}catch(e){return console.error(`[gatherProjectStructure] Error: ${e.message}`),null}}async function lr(e){try{let t=await q({types:["conversation_completed"],limit:3});return t.length===0?[]:t.map(n=>({timestamp:n.timestamp,summary:n.data.summary||"Conversation completed",purpose:n.data.purpose||"Unknown purpose"}))}catch(t){return console.error(`[gatherRecentConversations] Error: ${t.message}`),[]}}async function ur(e){try{let t=await q({types:["file_change","file_create","code_commit"],limit:e});return t.length===0?[]:t.map(n=>({timestamp:n.timestamp,files:n.data.files||[n.data.filePath||"Unknown file"],summary:n.data.message||`${n.event_type} event occurred`}))}catch(t){return console.error(`[gatherRecentChanges] Error: ${t.message}`),[]}}async function pr(){try{let e=await q({types:["milestone"],limit:3,includeMilestones:!0});return e.length===0?[]:e.map(t=>({name:t.data.name||"Unnamed milestone",description:t.data.description||"No description provided",timestamp:t.timestamp}))}catch(e){return console.error(`[gatherActiveWorkflows] Error: ${e.message}`),[]}}async function dr(e,t){try{let n=await we({minConfidence:.4,limit:5});return n.length===0?[]:n.map(r=>({name:r.name,type:r.pattern_type,description:r.description,confidence:r.confidence_score}))}catch(n){return console.error(`[gatherGlobalPatterns] Error: ${n.message}`),[]}}function fr(e,t,n){let r="Project context initialized";return t&&(r+=` for query: "${t}"`),n&&(r+=` with intent: ${n}`),e.codeContext&&e.codeContext.length>0&&(r+=`. Found ${e.codeContext.length} relevant code items`),e.architectureContext&&(r+=". Project documentation available"),e.recentChanges&&e.recentChanges.length>0&&(r+=`. ${e.recentChanges.length} recent file changes detected`),e.globalPatterns&&e.globalPatterns.length>0&&(r+=`. ${e.globalPatterns.length} relevant patterns identified`),r}async function mr(e){return e.toLowerCase().replace(/[^\w\s]/g,"").split(/\s+/).filter(t=>t.length>2).filter(t=>!["the","and","for","with"].includes(t))}var Xt={name:"initialize_conversation_context",description:"Initializes a new conversation context with comprehensive codebase information",inputSchema:$t,outputSchema:Pt,handler:or};N();import"zod";N();async function Ht(e){let t=process.env.MCP_MODE==="true";if(!e||!e.filePath||!e.newContent)return t||console.error("Invalid code change object:",e),{filePath:e?.filePath||"unknown",success:!1,error:"Invalid code change: missing required fields",timestamp:new Date().toISOString()};try{t||console.log(`Processing code change for ${e.filePath}`);let n;try{n=(await import("crypto")).createHash("sha256").update(e.newContent).digest("hex")}catch{n="unknown-hash-"+Date.now()}let r=!1;try{let i=await C(`
        SELECT entity_id, content_hash 
        FROM code_entities 
        WHERE file_path = ? AND entity_type = 'file'
      `,[e.filePath]);i&&i.rows&&i.rows.length>0&&i.rows[0].content_hash===n&&(t||console.log(`File ${e.filePath} is unchanged, skipping indexing`),r=!0)}catch(s){t||console.warn(`DB check error for ${e.filePath}, proceeding with indexing: ${s.message}`)}let o=[];if(!r)try{await ht(e.filePath,e.newContent,e.languageHint)}catch(s){return t||console.error(`Error indexing file ${e.filePath}: ${s.message}`),{filePath:e.filePath,success:!1,error:`Indexing failed: ${s.message}`,timestamp:new Date().toISOString()}}try{o=await gr([e.filePath])}catch(s){t||console.warn(`Error getting entities for ${e.filePath}: ${s.message}`),o=[]}return{filePath:e.filePath,success:!0,entityCount:o.length,unchanged:r,timestamp:new Date().toISOString()}}catch(n){return t||console.error(`Error processing code change for ${e.filePath}:`,n),{filePath:e.filePath,success:!1,error:`Failed to process code change: ${n.message}`,timestamp:new Date().toISOString()}}}async function gr(e){let t=process.env.MCP_MODE==="true";if(!e||e.length===0)return[];try{let n=[],r=new Set;for(let o of e)if(!r.has(o)){r.add(o);try{let i=await C("SELECT * FROM code_entities WHERE file_path = ?",[o]);if(!i||!i.rows)continue;let u=[...i.rows],l=u.filter(a=>a.entity_type==="file").map(a=>a.entity_id);if(l.length>0)for(let a of l)try{let f=await C(`
                SELECT * FROM code_entities 
                WHERE parent_entity_id = ?
              `,[a]);if(f&&f.rows)for(let _ of f.rows)u.some(h=>h.entity_id===_.entity_id)||u.push(_)}catch(m){t||console.warn(`Error fetching children for entity ${a}: ${m.message}`)}n=[...n,...u]}catch(s){t||console.warn(`Error processing file ${o}: ${s.message}`)}}return n}catch(n){return t||console.error("Error retrieving entities from changed files:",n),[]}}U();M();import"uuid";async function yr(e,t){try{c("INFO","update_conversation_context tool started",{conversationId:e.conversationId,messageCount:e.newMessages?.length||0,codeChangeCount:e.codeChanges?.length||0});let{conversationId:n,newMessages:r=[],codeChanges:o=[],preserveContextOnTopicShift:s=!0,contextIntegrationLevel:i="balanced",trackIntentTransitions:u=!0,tokenBudget:l=4e3}=e;if(!n){let y=new Error("conversationId is required");throw y.code="MISSING_CONVERSATION_ID",y}c("DEBUG","Processing update with parameters",{preserveContextOnTopicShift:s,contextIntegrationLevel:i,trackIntentTransitions:u});let a=!1,m=!1,f=null,_=null,h=!0,w=null;try{let y=await _e();c("DEBUG","Retrieved previous context state",{hasPreviousContext:!!y}),u&&(f=await ee(n),c("DEBUG","Retrieved previous intent",{previousIntent:f}))}catch(y){c("WARN","Failed to retrieve previous context state, continuing with defaults",{error:y.message})}if(r.length>0){c("INFO",`Processing ${r.length} new messages`);try{let y=await _r(n,r,{trackIntentTransitions:u});a=y.topicShift,c("DEBUG","Message processing completed",{topicShift:a}),u&&(m=y.intentTransition,_=y.currentIntent,m&&c("INFO","Intent transition detected",{from:f,to:_}))}catch(y){c("ERROR","Failed to process new messages",{error:y.message,conversationId:n})}}if(o.length>0){c("INFO",`Processing ${o.length} code changes`);try{let y=await Er(n,o);if(y.focusChanged&&(c("INFO","Focus changed due to code changes",{newFocus:y.newFocus}),u&&!m))try{let d=await Xe({conversationId:n,codeChanges:o});d.intentChanged&&(m=!0,_=d.newIntent,c("INFO","Intent changed due to code changes",{newIntent:_}))}catch(d){c("WARN","Failed to update intent from code changes",{error:d.message})}}catch(y){c("ERROR","Failed to process code changes",{error:y.message,conversationId:n})}}if(a||m)if(c("INFO","Topic shift or intent transition detected, managing context continuity",{topicShift:a,intentTransition:m,preserveContextOnTopicShift:s}),s)try{let y=await _e()||{},d=await wr(y,{topicShift:a,intentTransition:m,previousIntent:f,currentIntent:_,codeChanges:o},i);await Je(d),h=!0,c("INFO","Integrated previous and new context",{contextIntegrationLevel:i})}catch(y){c("ERROR","Failed to integrate contexts",{error:y.message})}else try{if(await re(),h=!1,c("INFO","Cleared previous context due to topic shift"),_)try{let y=await Lt(n,10),d=await Ge(y,o);d&&(await ye(d.type,d.identifier),w=d,c("INFO","Set new focus area based on intent",{type:d.type,identifier:d.identifier}))}catch(y){c("WARN","Failed to set new focus area",{error:y.message})}}catch(y){c("ERROR","Failed to clear context",{error:y.message})}else c("DEBUG","No topic shift or intent transition detected, preserving context");if(!w)try{w=await J(),c("DEBUG","Retrieved current focus",{focus:w?`${w.type}:${w.identifier}`:"none"})}catch(y){c("WARN","Failed to get current focus",{error:y.message})}let E;try{E=await Sr(n,_,a||m),c("DEBUG","Generated context synthesis",{synthesisLength:E?.length||0})}catch(y){c("WARN","Failed to generate context synthesis",{error:y.message}),E=null}try{await B("context_updated",{newMessagesCount:r.length,codeChangesCount:o.length,topicShift:a,intentTransition:m?{from:f,to:_}:null,contextPreserved:h,contextIntegrationLevel:h?i:"none"},[],n),c("DEBUG","Recorded context update in timeline")}catch(y){c("WARN","Failed to record context update in timeline",{error:y.message})}c("INFO","update_conversation_context tool completed successfully");let g={status:"success",message:`Conversation context updated for ${n}`,updatedFocus:w?{type:w.type,identifier:w.identifier}:void 0,contextContinuity:{topicShift:a,intentTransition:m,contextPreserved:h},synthesis:E};return{content:[{type:"text",text:JSON.stringify(g)}]}}catch(n){c("ERROR","Error in update_conversation_context tool",{error:n.message,stack:n.stack,input:{conversationId:e.conversationId,messageCount:e.newMessages?.length||0,codeChangeCount:e.codeChanges?.length||0}});let r={error:!0,errorCode:n.code||"UPDATE_FAILED",errorDetails:n.message};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function _r(e,t,n={}){try{c("DEBUG",`Processing ${t.length} messages for conversation ${e}`);let r={topicShift:!1,intentTransition:!1,currentIntent:null},o=null;if(n.trackIntentTransitions)try{o=await ee(e),c("DEBUG","Retrieved previous intent",{previousIntent:o})}catch(s){c("WARN","Failed to retrieve previous intent",{error:s.message})}for(let s of t)try{let i=!1,u=null;s.role==="user"&&(c("DEBUG","Checking for topic shift with user message"),i=await Rt(s.content,e),i&&(c("INFO","Topic shift detected",{messageContent:s.content.substring(0,50)+(s.content.length>50?"...":"")}),r.topicShift=!0)),c("DEBUG",`Recording message from ${s.role}`);let l=await bt(s.content,s.role,e,[],null,n.trackIntentTransitions&&r.currentIntent?r.currentIntent.purposeType:null);if(c("DEBUG",`Message recorded with ID: ${l}`),s.role==="user"&&i){try{let m=await de(e);m&&(c("INFO","Closing active topic segment",{topicId:m.topic_id}),await wt(m.topic_id,l))}catch(m){c("WARN","Failed to close active topic segment",{error:m.message})}let a="";try{a=await St([l])}catch(m){a=`Topic from: ${s.content.substring(0,30)}...`,c("WARN","Failed to generate topic name, using fallback",{error:m.message})}try{c("INFO","Creating new topic segment");let m=await pe(e,l,{name:a,description:s.content});c("INFO","Created new topic segment",{topicId:m});try{await C(`
                UPDATE conversation_history
                SET topic_segment_id = ?
                WHERE message_id = ?
              `,[m,l]),c("DEBUG","Updated message with new topic ID",{messageId:l,topicId:m}),u=m}catch(f){c("ERROR","Failed to update message with topic ID",{error:f.message})}}catch(m){c("ERROR","Failed to create new topic segment",{error:m.message})}}else if(s.role==="user"&&!i)try{let a=await de(e);a&&(await C(`
                UPDATE conversation_history
                SET topic_segment_id = ?
                WHERE message_id = ?
              `,[a.topic_id,l]),c("DEBUG","Updated message with existing topic ID",{messageId:l,topicId:a.topic_id}),u=a.topic_id)}catch(a){c("WARN","Failed to associate message with active topic",{error:a.message})}if(s.role==="user"&&n.trackIntentTransitions)try{let a=await P(e,10),m=await Be(s.content,a);if(m){let f=m.purpose,_=o?o.purposeType:null;f!==_&&(c("INFO","Conversation purpose change detected",{from:_,to:f}),await qe(e,_,f,l),r.intentTransition=!0,r.currentIntent={purposeType:f,confidence:m.confidence},o={purposeType:f,confidence:m.confidence})}}catch(a){c("WARN","Failed to detect conversation purpose",{error:a.message})}if(n.trackIntentTransitions)try{let a=await Xe({conversationId:e,messages:[s],messageId:l});a.intentChanged&&!r.intentTransition&&(r.intentTransition=!0,r.currentIntent=a.newIntent,c("INFO","Intent updated based on message content",{intent:a.newIntent}))}catch(a){c("WARN","Failed to update intent",{error:a.message})}}catch(i){c("ERROR","Failed to process message",{error:i.message,role:s.role,content:s.content?.substring(0,50)+"..."})}return r}catch(r){throw c("ERROR","Error processing new messages",{error:r.message,conversationId:e}),r}}async function Er(e,t){try{c("DEBUG",`Processing ${t.length} code changes for conversation ${e}`);let n={focusChanged:!1,newFocus:null};if(!t||!t.length)return n;let r=t.map(l=>!l||!l.filePath?(c("WARN","Received invalid code change object, skipping",{change:JSON.stringify(l).substring(0,100)+"..."}),Promise.resolve({success:!1,filePath:l?.filePath||"unknown",error:"Invalid code change: missing filePath"})):Ht(l).then(a=>(a.success?c("DEBUG",`Processed code change for ${l.filePath}`):c("WARN","Failed to process code change",{error:a.error||"Unknown error",path:l.filePath}),a)).catch(a=>(c("WARN","Unexpected error processing code change",{error:a.message,path:l.filePath}),{success:!1,filePath:l.filePath,error:a.message}))),s=(await Promise.allSettled(r)).map(l=>l.status==="fulfilled"?l.value:(c("ERROR","Promise rejected during code change processing",{reason:l.reason?.message||"Unknown error"}),{success:!1,error:l.reason?.message||"Unknown error"})),i=s.filter(l=>l.success).length,u=s.filter(l=>!l.success).length;u>0?c("WARN",`${u} of ${t.length} code changes failed processing`):c("INFO",`Successfully processed all ${t.length} code changes`);try{if(i>0){let l=t.reduce((a,m)=>{let f=a.changedLines?.length||0;return(m.changedLines?.length||0)>f?m:a},t[0]);if(l){let a={focus_type:"file",identifier:l.filePath,description:`File ${l.filePath} was modified`};try{await FocusAreaManagerLogic.setFocusArea(a),n.focusChanged=!0,n.newFocus=a}catch(m){c("WARN","Failed to update focus area",{error:m.message})}}}}catch(l){c("WARN","Error calculating focus area from code changes",{error:l.message})}return n}catch(n){return c("ERROR","Failed to process code changes",{error:n.message,conversationId:e}),{focusChanged:!1,newFocus:null,error:n.message}}}async function wr(e,t,n){let{topicShift:r,intentTransition:o,previousIntent:s,currentIntent:i,codeChanges:u}=t;try{c("INFO",`Integrating contexts with level: ${n}`);let l={...e};switch(n){case"minimal":if(r){let a=l.focus;l.recentContextItems=[],l.focus=a}break;case"aggressive":o&&(l.currentIntent=i);break;case"balanced":default:if(r){let a=l.focus;if(l.recentContextItems){let m=u.map(f=>f.filePath);l.recentContextItems=l.recentContextItems.filter(f=>!!(f.relatedTo&&f.relatedTo.includes(a?.identifier)||f.path&&m.some(_=>f.path.includes(_))||f.timestamp&&Date.now()-f.timestamp<5*60*1e3))}}o&&(l.currentIntent=i,u.length>0&&l.recentContextItems&&(l.recentContextItems.forEach(a=>{a.contentType==="code"&&i&&(i==="debugging"&&a.path&&a.path.includes("test")||i==="feature_planning"&&a.path&&a.path.includes("docs"))&&(a.priority=Math.min(a.priority+.2,1))}),l.recentContextItems.sort((a,m)=>m.priority-a.priority)));break}return l}catch(l){return c("ERROR","Error integrating contexts",{error:l.message}),e}}async function Sr(e,t,n){try{c("INFO","Generating context synthesis");let r=await _e(),o=await J(),s=await me(e,5),i="Current conversation context";if(n){if(o){if(i=`The conversation is now focused on ${o.type} "${o.identifier}"`,t){let l=typeof t=="string"?t.replace(/_/g," "):t;i+=` with the purpose of ${l}`}}else t&&(i=`The conversation is focused on ${typeof t=="string"?t.replace(/_/g," "):t}`);if(s.length>0){let l=s.map(m=>m.content).join(" "),a=await $(l,{targetLength:150});i+=`. Recent discussion: ${a}`}}else if(o){if(i=`Continuing focus on ${o.type} "${o.identifier}"`,t){let l=typeof t=="string"?t.replace(/_/g," "):t;i+=` with ${l}`}}else t&&(i=`Continuing with ${typeof t=="string"?t.replace(/_/g," "):t}`);let u=[];if(o&&u.push(`Focus on ${o.type}: ${o.identifier}`),t)switch(t){case"debugging":u.push("Identify and fix issues in the code");break;case"feature_planning":u.push("Design and plan new features");break;case"code_review":u.push("Review code for quality and correctness");break;case"learning":u.push("Explain concepts and provide information");break;case"code_generation":u.push("Generate or modify code");break;default:u.push("Address user's current needs")}if(r&&r.recentContextItems){let l=r.recentContextItems.slice(0,2).map(a=>a.type==="file"?`Maintain context on file: ${a.name||a.path}`:a.type==="entity"?`Keep focus on: ${a.name}`:null).filter(Boolean);u.push(...l)}return{summary:i,topPriorities:u.length>0?u:void 0}}catch(r){return c("ERROR","Error generating context synthesis",{error:r.message}),{summary:"Context updated"}}}var Jt={name:"update_conversation_context",description:"Updates an existing conversation context with new messages, code changes, and context management",inputSchema:Ft,outputSchema:zt,handler:yr};N();import"zod";X();U();X();j();M();async function Tr(e,t){try{c("INFO","retrieve_relevant_context tool started",{query:e.query?.substring(0,50),conversationId:e.conversationId,tokenBudget:e.tokenBudget||W});let{conversationId:n,query:r,tokenBudget:o=W,constraints:s={},contextFilters:i={},weightingStrategy:u="balanced",balanceStrategy:l="proportional",contextBalance:a="auto",sourceTypePreferences:m={}}=e;if(!r){let E=new Error("Query is required");throw E.code="MISSING_QUERY",E}if(!n){let E=new Error("Conversation ID is required");throw E.code="MISSING_CONVERSATION_ID",E}c("DEBUG","Context retrieval parameters",{balanceStrategy:l,contextBalance:a,constraints:Object.keys(s),filters:Object.keys(i)});let f=[],_=null,h=null;try{f=await P(n,20),c("DEBUG","Retrieved conversation history",{messageCount:f.length})}catch(E){c("WARN","Failed to retrieve conversation history",{error:E.message,conversationId:n})}let w={relevantContext:[],conversationContext:f.map(E=>({type:"conversation",content:E.content,metadata:{role:E.role,messageId:E.messageId},relevanceScore:.9})),currentTopic:_,currentPurpose:h,statusMessage:"Retrieved conversation context successfully",metrics:{totalSnippets:f.length,relevanceThreshold:.5,tokenUsage:f.reduce((E,g)=>E+vr(g.content),0)}};return c("INFO",`Returning simplified context with ${w.conversationContext.length} conversation messages`),{content:[{type:"text",text:JSON.stringify({conversationId:e.conversationId,query:e.query,retrievalTime:Date.now(),relevantContext:{conversationContext:w.conversationContext,codeContext:[],patternContext:[],fileContext:[]},focusInfo:{currentTopic:w.currentTopic,currentPurpose:w.currentPurpose},queryAnalysis:{status:w.statusMessage,metrics:w.metrics}})}]}}catch(n){return c("ERROR","Error in retrieve_relevant_context handler",{error:n.message,code:n.code}),{content:[{type:"text",text:JSON.stringify({error:!0,errorCode:n.code||"RETRIEVAL_FAILED",errorDetails:n.message,conversationId:e.conversationId,query:e.query})}]}}}function vr(e){try{return e?Math.ceil(e.length/4):0}catch(t){return c("WARN","Error estimating token count",{error:t.message,textLength:e?.length||0}),e?Math.ceil(e.length/4):0}}var Qt={name:"retrieve_relevant_context",description:"Retrieves context from multiple sources that is relevant to the current query or conversation",inputSchema:Ut,outputSchema:Bt,handler:Tr};N();import"zod";import{v4 as br}from"uuid";N();F();X();N();import{v4 as Ps}from"uuid";F();M();import{v4 as js}from"uuid";async function Kt(e){try{c("info",`[LearningSystem] Analyzing patterns around milestone: ${e}`);let n=await C("SELECT * FROM context_states WHERE milestone_id = ?",[e]);if(!n||!n.rows||n.rows.length===0){c("warn",`[LearningSystem] No context snapshot found for milestone ${e}`);return}let r=n.rows[0];if(!r){c("warn",`[LearningSystem] Empty snapshot data for milestone ${e}`);return}let o=r.created_at||new Date().toISOString(),s=r.focus_areas||[],i=r.conversation_id;if(!i){c("warn",`[LearningSystem] No conversation_id in snapshot for milestone ${e}`);return}let u=new Date(o).getTime(),l=2*60*60*1e3,a=1*60*60*1e3,m=new Date(u-l).toISOString(),f=new Date(u+a).toISOString(),h=await C(`
      SELECT * FROM timeline_events
      WHERE conversation_id = ?
        AND timestamp >= ?
        AND timestamp <= ?
      ORDER BY timestamp ASC
    `,[i,m,f]);if(!h||!h.rows||h.rows.length===0){c("info",`[LearningSystem] No events found in the time window for milestone ${e}`);return}let w=h.rows||[],g=await C(`
      SELECT * FROM conversation_history
      WHERE conversation_id = ?
        AND timestamp >= ?
        AND timestamp <= ?
      ORDER BY timestamp ASC
    `,[i,m,f]),y=g&&g.rows?g.rows:[],d={};for(let x of w)if(x.data)try{let v=typeof x.data=="string"?JSON.parse(x.data):x.data;if(v.activeFile&&(d[v.activeFile]=(d[v.activeFile]||0)+1),v.relatedFiles&&Array.isArray(v.relatedFiles))for(let R of v.relatedFiles)d[R]=(d[R]||0)+1}catch{}let T=w.filter(x=>x.type==="search_query").map(x=>{try{let v=typeof x.data=="string"?JSON.parse(x.data):x.data;return v&&v.query?v.query:null}catch{return null}}).filter(Boolean),S={},b={};for(let x of y)x.topic_segment_id&&(S[x.topic_segment_id]=(S[x.topic_segment_id]||0)+1),x.purpose_type&&(b[x.purpose_type]=(b[x.purpose_type]||0)+1);c("info",`[LearningSystem] Milestone ${e} context analysis:`),c("info","  Most accessed code entities:",{entities:Object.entries(d).sort((x,v)=>v[1]-x[1]).slice(0,5)}),c("info","  Most common search queries:",{queries:T.slice(0,5)}),c("info","  Most discussed topics:",{topics:Object.entries(S).sort((x,v)=>v[1]-x[1]).slice(0,3)}),c("info","  Most discussed purposes:",{purposes:Object.entries(b).sort((x,v)=>v[1]-x[1]).slice(0,3)}),c("info",`[LearningSystem] Analysis around milestone ${e} complete.`)}catch(t){c("error",`[LearningSystem] Error analyzing patterns around milestone ${e}:`,{error:t.message})}}X();M();async function Rr(e,t){try{c("INFO","record_milestone_context tool started",{milestoneName:e.name,category:e.milestoneCategory||"uncategorized",conversationId:e.conversationId});let{conversationId:n,name:r,description:o="",customData:s={},milestoneCategory:i="uncategorized",assessImpact:u=!0}=e;if(!r){let g=new Error("Milestone name is required");throw g.code="MISSING_NAME",g}let l=[],a=null,m=[];try{l=await Qe(),a=await J(),m=l.map(g=>g.id),c("DEBUG","Retrieved active context",{entityCount:m.length,hasFocus:!!a})}catch(g){c("WARN","Error retrieving active context, continuing with empty context",{error:g.message})}let f={milestoneCategory:i,name:r,description:o,activeFocus:a,entityIds:m,customData:s,timestamp:Date.now(),conversationId:n},_;try{_=await B("milestone_created",{name:r,category:i,entityCount:m.length,timestamp:Date.now()},m,n),c("DEBUG","Recorded milestone event in timeline",{eventId:_})}catch(g){throw c("ERROR","Failed to record milestone event in timeline",{error:g.message,name:r,category:i}),g}let h;try{h=await kt(f,r,o,_),c("INFO",`Created milestone with ID: ${h}`);try{let g=br(),y=new Date().toISOString(),d=JSON.stringify(f),T=`
          INSERT INTO context_states (
            state_id, milestone_id, conversation_id, state_type, 
            state_data, created_at, metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `,S=[g,h,n,"milestone",d,y,JSON.stringify({name:r,description:o,category:i})];await C(T,S),c("INFO",`Saved milestone state in context_states with ID: ${g}`)}catch(g){c("ERROR","Failed to save milestone in context_states table",{error:g.message,milestoneId:h})}}catch(g){throw c("ERROR","Failed to create milestone snapshot",{error:g.message,name:r,eventId:_}),g}let w=null;if(u)try{c("INFO","Starting impact assessment for milestone",{milestoneId:h,category:i}),w=await Ar(h,i,m)}catch(g){c("WARN","Failed to assess milestone impact",{error:g.message,milestoneId:h}),w={impactScore:0,impactLevel:"unknown",impactSummary:`Unable to assess impact: ${g.message}`,error:g.message,scopeMetrics:{directlyModifiedEntities:m.length,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}}}else c("DEBUG","Skipping impact assessment (not requested)");setTimeout(()=>{c("DEBUG",`Starting background pattern analysis for milestone: ${h}`),Kt(h).catch(g=>{c("ERROR","Error in background pattern analysis",{error:g.message,milestoneId:h})})},100),c("INFO","record_milestone_context tool completed successfully",{milestoneId:h,entityCount:m.length,hasImpactAssessment:!!w});let E={message:`Milestone "${r}" recorded successfully with ${m.length} related entities.`,milestoneId:h,status:"success",milestoneCategory:i,relatedEntitiesCount:m.length,impactAssessment:w};return{content:[{type:"text",text:JSON.stringify(E)}]}}catch(n){c("ERROR","Error in record_milestone_context tool",{error:n.message,stack:n.stack,input:{name:e.name,category:e.milestoneCategory,conversationId:e.conversationId}});let r={error:!0,errorCode:n.code||"MILESTONE_RECORDING_FAILED",errorDetails:n.message,milestoneId:null,status:"error",milestoneCategory:e.milestoneCategory||"uncategorized",relatedEntitiesCount:0,impactAssessment:{error:n.message}};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function Ar(e,t,n){try{if(c("DEBUG",`Assessing impact for milestone: ${e}`,{category:t,entityCount:n?.length||0}),!n||n.length===0)return c("DEBUG","No active context entities, skipping detailed impact assessment"),{impactScore:0,impactLevel:"none",impactSummary:"No code entities were modified in this milestone.",scopeMetrics:{directlyModifiedEntities:0,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}};let r=[];try{c("DEBUG",`Fetching details for ${n.length} entities`),r=(await Promise.all(n.map(async g=>{try{let d=await C("SELECT * FROM code_entities WHERE entity_id = ?",[g]);return d.length>0?d[0]:null}catch(y){return c("WARN","Failed to fetch entity details",{error:y.message,entityId:g}),null}}))).filter(Boolean),c("DEBUG",`Retrieved details for ${r.length}/${n.length} entities`)}catch(E){return c("ERROR","Failed to fetch entity details",{error:E.message}),{impactScore:.1,impactLevel:"unknown",impactSummary:`Impact could not be fully assessed due to database error: ${E.message}`,scopeMetrics:{directlyModifiedEntities:n.length,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0},error:E.message}}let o=new Set(n),s=[],i=new Map,u=new Map;r.forEach(E=>{u.set(E.entity_id,E.entity_type)});try{for(let E of r){let g=await ue(E.entity_id,"outgoing");c("DEBUG",`Retrieved ${g.length} outgoing relationships for entity`,{entityId:E.entity_id,entityType:E.entity_type});for(let T of g)o.has(T.target_entity_id)||(o.add(T.target_entity_id),(T.relationship_type==="calls"||T.relationship_type==="extends"||T.relationship_type==="implements")&&s.push({source:E.entity_id,target:T.target_entity_id,type:T.relationship_type,criticality:.8}));let d=(E.file_path||"").split("/").slice(0,2).join("/");if(d){let T=i.get(d)||0;i.set(d,T+1)}}}catch(E){c("WARN","Error analyzing relationships",{error:E.message,milestoneId:e})}c("DEBUG","Completed relationship analysis",{impactedEntities:o.size,criticalPaths:s.length,componentCount:i.size});let l=n.length,a=o.size-l,m=i.size,f=s.length,_,h;try{let E=Math.min(1,l*.02+a*.01+m*.1+f*.05),g=1;switch(t){case"major_feature":g=1.2;break;case"refactoring":g=1.5;break;case"bug_fix":g=.7;break;case"critical_fix":g=1.3;break;default:g=1}_=Math.min(1,E*g),_<.2?h="low":_<.5?h="medium":_<.8?h="high":h="critical",c("INFO","Calculated impact assessment",{impactScore:_,impactLevel:h,directlyModified:l,potentiallyImpacted:a,components:m})}catch(E){c("ERROR","Error calculating impact score",{error:E.message}),_=.3,h="medium"}let w;try{w=Nr(h,l,a,m,f,t)}catch(E){c("WARN","Error generating impact summary",{error:E.message}),w=`This milestone has a ${h} impact, affecting ${l} entities directly and potentially impacting ${a} others.`}return{impactScore:_,impactLevel:h,impactSummary:w,scopeMetrics:{directlyModifiedEntities:l,potentiallyImpactedEntities:a,impactedComponents:m,criticalPathsCount:f},componentBreakdown:Object.fromEntries(i),criticalPathsTop:s.slice(0,5)}}catch(r){return c("ERROR","Error in impact assessment",{error:r.message,stack:r.stack,milestoneId:e,category:t}),{impactScore:.1,impactLevel:"unknown",impactSummary:`Impact assessment encountered an error: ${r.message}`,error:r.message,scopeMetrics:{directlyModifiedEntities:n?n.length:0,potentiallyImpactedEntities:0,impactedComponents:0,criticalPathsCount:0}}}}function Nr(e,t,n,r,o,s){try{let i=`This ${s} milestone has a ${e} impact, `;switch(i+=`directly modifying ${t} entities and potentially affecting ${n} additional entities. `,r>0&&(i+=`Changes span ${r} component${r===1?"":"s"}. `),o>0&&(i+=`Found ${o} critical dependency path${o===1?"":"s"} that may require careful testing. `),s){case"refactoring":i+="Since this is a refactoring, consider comprehensive regression testing.";break;case"major_feature":i+="As a major feature, ensure adequate test coverage for new functionality.";break;case"bug_fix":i+="For this bug fix, focus testing on the specific issue resolution.";break;case"critical_fix":i+="This critical fix requires careful validation in production-like environments.";break}return i}catch(i){return c("WARN","Error generating impact summary text",{error:i.message}),`This milestone has a ${e} impact, affecting ${t} entities directly.`}}var Zt={name:"record_milestone_context",description:"Records a development milestone and its context, creating a snapshot for reference and learning",inputSchema:qt,outputSchema:Wt,handler:Rr};N();import"zod";async function Ye(e){try{console.log(`[LearningSystem] Extracting patterns from conversation ${e}`);let t=await P(e,50,0);return!t||t.length===0?(console.log(`[LearningSystem] No messages found in conversation ${e}`),[]):[]}catch(t){return console.error(`[LearningSystem] Error extracting patterns: ${t.message}`),[]}}async function Yt(e){try{console.log(`[LearningSystem] Extracting bug patterns from conversation ${e}`);let t=await P(e,50,0);if(!t||t.length===0)return console.log(`[LearningSystem] No messages found in conversation ${e}`),[];let n=["error","bug","issue","problem","crash","fail","exception","TypeError","undefined"],r=[];for(let s=0;s<t.length;s++){let i=t[s];i.role==="user"&&n.some(u=>i.content.toLowerCase().includes(u))&&s+1<t.length&&t[s+1].role==="assistant"&&r.push({errorMessage:i.content,solutionMessage:t[s+1].content})}let o=r.map((s,i)=>{let u=s.errorMessage.substring(0,100),l=s.solutionMessage.substring(0,150),a=`Bug Pattern ${i+1}`,m=s.errorMessage.match(/(TypeError|ReferenceError|SyntaxError|RangeError|Error):/);if(m&&m[1])a=`${m[1]} Pattern`;else{let f=n.filter(_=>s.errorMessage.toLowerCase().includes(_));f.length>0&&(a=`${f[0].charAt(0).toUpperCase()+f[0].slice(1)} Pattern`)}return{name:a,description:u,solution:l||"No specific solution identified",detected_at:new Date().toISOString(),source_conversation_id:e,frequency:1,confidence_score:.7}});return console.log(`[LearningSystem] Extracted ${o.length} bug patterns from conversation ${e}`),o}catch(t){return console.error(`[LearningSystem] Error extracting bug patterns: ${t.message}`),[]}}async function Vt(e){try{let t;if(typeof e=="string")console.log(`[LearningSystem] Extracting key-value pairs from conversation ${e}`),t=await P(e,50,0);else if(Array.isArray(e))t=e;else return console.error(`[LearningSystem] Invalid input type for extractKeyValuePairs: ${typeof e}`),[];if(!t||!Array.isArray(t)||t.length===0)return[];let n=[],r=[/(\w+[\s\w]*)\s+is\s+([\w\s]+)/i,/(\w+[\s\w]*)\s*=\s*([\w\s]+)/i,/(\w+[\s\w]*)\s*:\s*([\w\s]+)/i,/the\s+(\w+[\s\w]*)\s+of\s+(\w+[\s\w]*)\s+is\s+([\w\s]+)/i];for(let o of t){let i=(o.content||"").split(/[.!?]+/);for(let u of i)if(u.trim().length!==0)for(let l of r){let a=u.match(l);a&&(l.toString().includes("of")?n.push({key:`${a[1].trim()} of ${a[2].trim()}`,value:a[3].trim(),confidence:.7,source:"conversation",source_id:typeof e=="string"?e:o.conversation_id,timestamp:new Date().toISOString()}):n.push({key:a[1].trim(),value:a[2].trim(),confidence:.8,source:"conversation",source_id:typeof e=="string"?e:o.conversation_id,timestamp:new Date().toISOString()}))}}return console.log(`[LearningSystem] Extracted ${n.length} key-value pairs`),n}catch(t){return console.error(`[LearningSystem] Error extracting key-value pairs: ${t.message}`),[]}}U();F();M();import{v4 as Or}from"uuid";async function kr(e,t){try{c("INFO","finalize_conversation_context tool started",{conversationId:e.conversationId,outcome:e.outcome||"completed",clearActiveContext:e.clearActiveContext||!1});let{conversationId:n,clearActiveContext:r=!1,extractLearnings:o=!0,promotePatterns:s=!0,synthesizeRelatedTopics:i=!0,generateNextSteps:u=!0,outcome:l="completed"}=e;if(!n){let d=new Error("Conversation ID is required");throw d.code="MISSING_CONVERSATION_ID",d}c("DEBUG","Processing options",{extractLearnings:o,promotePatterns:s,synthesizeRelatedTopics:i,generateNextSteps:u});let a=[],m=null,f=[];try{if(a=await P(n),!a||a.length===0){let d=new Error(`No conversation history found for ID: ${n}`);throw d.code="CONVERSATION_NOT_FOUND",d}c("DEBUG","Retrieved conversation history",{messageCount:a.length})}catch(d){throw c("ERROR","Failed to retrieve conversation history",{error:d.message,conversationId:n}),d}try{m=await It(n),c("DEBUG",`Retrieved conversation purpose: ${m||"Unknown"}`)}catch(d){c("WARN","Failed to retrieve conversation purpose",{error:d.message,conversationId:n})}try{f=await je(n),c("DEBUG",`Retrieved ${f.length} conversation topics`)}catch(d){c("WARN","Failed to retrieve conversation topics",{error:d.message,conversationId:n}),f=[]}let _="";try{_=await At(n),c("INFO","Generated conversation summary",{summaryLength:_.length})}catch(d){c("WARN","Failed to generate conversation summary",{error:d.message,conversationId:n}),_=`Conversation ${n} with ${a.length} messages`}try{await B("conversation_end",{summary:_,purpose:m,topics:f.length,outcome:l},[],n),c("DEBUG","Recorded conversation_end event in timeline")}catch(d){c("WARN","Failed to record conversation_end event",{error:d.message,conversationId:n})}let h=null,w=null,E=null,g=null;if(o)try{c("INFO","Extracting learnings from conversation"),h=await Lr(n,a),c("INFO",`Extracted ${h?.patterns?.length||0} patterns and ${h?.bugPatterns?.length||0} bug patterns`)}catch(d){c("WARN","Failed to extract learnings",{error:d.message,conversationId:n}),h={patterns:[],bugPatterns:[],conceptualInsights:[],error:d.message}}else c("DEBUG","Skipping learning extraction (not requested)");if(s)try{c("INFO","Promoting patterns from conversation"),w=await Dr(n,l),c("INFO",`Promoted ${w?.count||0} patterns`)}catch(d){c("WARN","Failed to promote patterns",{error:d.message,conversationId:n}),w={count:0,patterns:[],error:d.message}}else c("DEBUG","Skipping pattern promotion (not requested)");if(i)try{c("INFO","Finding and synthesizing related conversations"),E=await Mr(n,f,m),c("INFO",`Found ${E?.conversations?.length||0} related conversations`)}catch(d){c("WARN","Failed to synthesize related conversations",{error:d.message,conversationId:n}),E={conversations:[],insights:[],error:d.message}}else c("DEBUG","Skipping related topic synthesis (not requested)");if(u)try{c("INFO","Generating next step suggestions"),g=await Pr(n,m,_,h),c("INFO",`Generated ${g?.suggestions?.length||0} next step suggestions`)}catch(d){c("WARN","Failed to generate next step suggestions",{error:d.message,conversationId:n}),g={suggestions:[],error:d.message}}else c("DEBUG","Skipping next step generation (not requested)");if(r)try{await re(),c("INFO","Cleared active context")}catch(d){c("WARN","Failed to clear active context",{error:d.message})}try{let d=new Date().toISOString();if(await C(`
        UPDATE conversation_purposes
        SET end_timestamp = ?
        WHERE conversation_id = ? AND end_timestamp IS NULL
      `,[d,n]),c("INFO","Marked all active conversation purposes as ended"),!((await C(`
        SELECT COUNT(*) as count FROM conversation_purposes 
        WHERE conversation_id = ?
      `,[n]))?.rows?.[0]?.count>0)){let v=Or(),R=new Date(Date.now()-6e4).toISOString();await C(`
          INSERT INTO conversation_purposes (
            purpose_id, conversation_id, purpose_type, confidence,
            start_timestamp, end_timestamp, metadata
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `,[v,n,"general_query",.8,R,d,JSON.stringify({source:"finalization",outcome:l})]),c("INFO","Created general_query purpose record for finalization")}}catch(d){c("WARN","Failed to finalize conversation purposes",{error:d.message,conversationId:n})}c("INFO","finalize_conversation_context tool completed successfully");let y={message:`Conversation ${n} finalized successfully with outcome: ${l}`,status:"success",summary:_,purpose:m||"Unknown purpose",extractedLearnings:h,promotedPatterns:w,relatedConversations:E,nextSteps:g};return{content:[{type:"text",text:JSON.stringify(y)}]}}catch(n){c("ERROR","Error in finalize_conversation_context tool",{error:n.message,stack:n.stack,input:{conversationId:e.conversationId,outcome:e.outcome}});let r={error:!0,errorCode:n.code||"FINALIZATION_FAILED",errorDetails:n.message,summary:"Failed to finalize conversation context",purpose:"Unknown due to error",extractedLearnings:null,promotedPatterns:null,relatedConversations:null,nextSteps:null};return{content:[{type:"text",text:JSON.stringify(r)}]}}}async function Lr(e,t=!0,n=!1){try{c("INFO","Extracting learnings from conversation");let r=0,o=0;if(t)try{let s=await Ye(e);s&&s.length>0&&(r=s.length,n&&s.length>0)}catch(s){c("WARN",`Failed to extract patterns: ${s.message}`)}try{let s=await Yt(e);s&&s.length>0&&(o=s.length)}catch(s){c("WARN",`Failed to extract bug patterns: ${s.message}`)}try{let s=await Vt(e);s&&s.length>0}catch(s){c("WARN",`Failed to extract key-value pairs: ${s.message}`)}return c("INFO",`Extracted ${r} patterns and ${o} bug patterns`),{patternCount:r,bugPatternCount:o}}catch(r){return c("ERROR",`Error extracting conversation learnings: ${r.message}`),{patternCount:0,bugPatternCount:0}}}async function Dr(e,t){try{console.log(`[_promoteConversationPatterns] Promoting patterns for conversation ${e}`);let n=await Ye(e);if(!n||n.length===0)return console.log(`[_promoteConversationPatterns] No patterns found in conversation ${e}`),{promoted:0,patterns:[]};console.log(`[_promoteConversationPatterns] Found ${n.length} patterns to evaluate for promotion`);let r={promoted:0,patterns:[]},o=.5;t==="completed"&&(o=.6),t==="abandoned"&&(o=.7);for(let s of n)try{if(s.is_global){r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!1,confidence:s.confidence_score});continue}if(s.confidence_score<o){r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!1,confidence:s.confidence_score});continue}await Se(s.pattern_id,s.confidence_score);let i=t==="completed"||t==="reference_only"?"confirmation":"usage";await Ke(s.pattern_id,i,{conversationId:e}),r.promoted++,r.patterns.push({patternId:s.pattern_id,name:s.name,type:s.pattern_type,promoted:!0,confidence:s.confidence_score}),console.log(`[_promoteConversationPatterns] Successfully promoted pattern ${s.pattern_id}`)}catch(i){console.warn(`[_promoteConversationPatterns] Error processing pattern ${s.pattern_id}:`,i)}return console.log(`[_promoteConversationPatterns] Promoted ${r.promoted} patterns to global repository`),r}catch(n){return console.error("[_promoteConversationPatterns] Error promoting patterns:",n),{promoted:0,patterns:[],error:n.message}}}async function Mr(e,t,n){try{console.log(`[_findAndSynthesizeRelatedConversations] Finding related conversations for ${e}`);let r=new Set;t&&Array.isArray(t)?t.forEach(a=>{a.keywords&&Array.isArray(a.keywords)&&a.keywords.forEach(m=>r.add(m))}):console.warn("[_findAndSynthesizeRelatedConversations] conversationTopics is not an array:",typeof t);let o=Array.from(r),s=await q({types:["conversation_end","conversation_completed"],limit:10,excludeConversationId:e});if(!s||s.length===0)return console.log("[_findAndSynthesizeRelatedConversations] No recent conversations found to compare"),{relatedCount:0,conversations:[],synthesizedInsights:[]};let i=[];for(let a of s)try{if(!a.data||!a.conversation_id)continue;let m=await je(a.conversation_id),f=new Set;if(m&&Array.isArray(m))m.forEach(g=>{g.keywords&&Array.isArray(g.keywords)&&g.keywords.forEach(y=>f.add(y))});else{console.warn(`[_findAndSynthesizeRelatedConversations] eventTopics for ${a.conversation_id} is not an array`);continue}let _=o.filter(g=>f.has(g)).length,h=new Set([...o,...f]).size,w=h>0?_/h:0,E=[];m&&Array.isArray(m)&&t&&Array.isArray(t)&&m.forEach(g=>{t.forEach(y=>{g.topic_name&&y.topic_name&&g.topic_name.toLowerCase()===y.topic_name.toLowerCase()&&E.push(g.topic_name)})}),(w>.2||E.length>0)&&i.push({conversationId:a.conversation_id,summary:a.data.summary||"No summary available",timestamp:a.timestamp,similarityScore:w,commonTopics:E})}catch(m){console.warn(`[_findAndSynthesizeRelatedConversations] Error processing event ${a.event_id}:`,m)}i.sort((a,m)=>m.similarityScore-a.similarityScore);let u=i.slice(0,5);console.log(`[_findAndSynthesizeRelatedConversations] Found ${u.length} related conversations`);let l=await $r(u,n);return{relatedCount:u.length,conversations:u,synthesizedInsights:l}}catch(r){return console.error("[_findAndSynthesizeRelatedConversations] Error finding related conversations:",r),{relatedCount:0,conversations:[],synthesizedInsights:[],error:r.message}}}async function $r(e,t){try{if(!e||e.length===0)return[];let n={};if(e.forEach(o=>{o.commonTopics&&o.commonTopics.length>0&&o.commonTopics.forEach(s=>{n[s]||(n[s]=[]),n[s].push(o)})}),Object.keys(n).length===0&&t){let o=`Conversations about ${t}`;n[o]=e}let r=[];for(let[o,s]of Object.entries(n))if(s.length>=2){let i=s.map(l=>l.summary).join(" | "),u=await $(i,{targetLength:150,preserveKeyPoints:!0});r.push({topic:o,insight:u,conversationCount:s.length,sourceSummaries:s.map(l=>({conversationId:l.conversationId,summary:l.summary}))})}return r}catch(n){return console.error("[_synthesizeInsightsFromRelatedConversations] Error synthesizing insights:",n),[]}}async function Pr(e,t,n,r){try{console.log(`[_generateNextStepSuggestions] Generating next steps for conversation ${e}`);let o={suggestedNextSteps:[],followUpTopics:[],referenceMaterials:[]},s=O(n),i=L(s,10),u="general_query";t&&(typeof t=="string"?u=t:typeof t=="object"&&t.purposeType?u=t.purposeType:typeof t=="object"&&t.purpose_type&&(u=t.purpose_type)),console.log(`[_generateNextStepSuggestions] Using purpose type: ${u}`);let l=[],a=[];if(u)switch(typeof u=="string"?u.toLowerCase():"general_query"){case"debugging":case"bug_fixing":l.push({action:"Create a test case that verifies the bug fix",priority:"high",rationale:"Ensure the bug doesn't reoccur in the future"}),l.push({action:"Document the root cause and solution",priority:"medium",rationale:"Help prevent similar issues in the future"});break;case"feature_planning":case"design_discussion":l.push({action:"Create tickets/tasks for implementation work",priority:"high",rationale:"Break down the feature into manageable pieces"}),l.push({action:"Draft initial implementation plan with milestones",priority:"medium",rationale:"Establish a timeline and checkpoints"});break;case"code_review":l.push({action:"Address feedback points and resubmit for review",priority:"high",rationale:"Incorporate the suggested improvements"}),l.push({action:"Update documentation to reflect changes",priority:"medium",rationale:"Keep documentation in sync with code"});break;case"onboarding":case"knowledge_sharing":l.push({action:"Create summary documentation of discussed topics",priority:"high",rationale:"Solidify knowledge transfer"}),l.push({action:"Schedule follow-up session for additional questions",priority:"medium",rationale:"Address remaining questions after initial processing"});break;default:l.push({action:"Document key decisions from the conversation",priority:"medium",rationale:"Preserve important context for future reference"})}if(r&&r.learnings){let m=r.learnings.filter(_=>_.type==="design_decision");m.length>0&&m.filter(h=>h.confidence>=.7).slice(0,2).forEach(h=>{a.push({topic:`Implementation details for: ${h.content}`,priority:"high",rationale:"Turn design decision into concrete implementation"})});let f=r.learnings.filter(_=>_.type==="bug_pattern");f.length>0&&f.filter(h=>h.confidence>=.8).slice(0,2).forEach(h=>{a.push({topic:`Root cause analysis for: ${h.content}`,priority:"medium",rationale:"Prevent similar bugs in the future"})})}try{let m=Array.isArray(i)?i.filter(f=>typeof f=="string"):[];if(m.length>0){let _=(await V(m,{fileTypes:["md","txt","rst","pdf","doc"],maxResults:5,searchDocumentation:!0})).map(h=>({title:h.name||h.file_path||"Unnamed reference",path:h.file_path,type:h.entity_type||"document",relevance:h.score||.5}));o.referenceMaterials=_}}catch(m){console.error("Error in searchByKeywords:",m)}return o.suggestedNextSteps=l,o.followUpTopics=a,console.log(`[_generateNextStepSuggestions] Generated ${l.length} next steps and ${a.length} follow-up topics`),o}catch(o){return console.error("[_generateNextStepSuggestions] Error generating next steps:",o),{suggestedNextSteps:[],followUpTopics:[],referenceMaterials:[],error:o.message}}}var en={name:"finalize_conversation_context",description:"Finalizes a conversation context, extracting learnings, promoting patterns, and generating insights",inputSchema:jt,outputSchema:Gt,handler:kr};var Fr=[Xt,Jt,Qt,Zt,en],tn=Fr;M();typeof global.lastConversationId>"u"&&(global.lastConversationId=null);function Te(e,t){return async(n,r)=>{try{c("DEBUG",`${t} tool handler invoked`,{paramsKeys:Object.keys(n)});let o=n;if(n&&typeof n=="object"&&Object.keys(n).length===1&&n.signal&&Object.keys(n.signal).length===0)o={},c("WARN",`${t} received only signal object, using defaults`,{params:n});else if(n&&n.signal&&Object.keys(n).length>1){let{signal:a,...m}=n;o=m,c("DEBUG",`${t} extracted parameters from signal object`,{extractedParams:Object.keys(o)})}let s=zr(o);c("DEBUG",`${t} extracted parameters`,{extractedParams:s});let u={...Ur(t),...s};c("DEBUG",`${t} merged parameters`,{mergedParams:u}),u.conversationId?global.lastConversationId=u.conversationId:global.lastConversationId&&(u.conversationId=global.lastConversationId,c("INFO",`Using last conversation ID: ${global.lastConversationId}`));let l=await e(u,r);return{content:[{type:"text",text:typeof l=="string"?l:JSON.stringify(l)}]}}catch(o){return c("ERROR",`Error in ${t} tool handler`,{error:o.message,stack:o.stack}),{content:[{type:"text",text:JSON.stringify({error:!0,message:o.message,details:o.stack})}]}}}}function zr(e){let t={};try{if(e&&typeof e=="object"){if(Object.keys(e).forEach(n=>{n!=="signal"&&n!=="requestId"&&(t[n]=e[n])}),e.random_string)try{let n=JSON.parse(e.random_string);Object.assign(t,n)}catch{typeof e.random_string=="string"&&e.random_string.length>30&&e.random_string.includes("-")&&(t.conversationId=e.random_string)}e.conversationId&&(t.conversationId=e.conversationId),e.initialQuery&&(t.initialQuery=e.initialQuery),e.contextDepth&&(t.contextDepth=e.contextDepth),e.query&&(t.query=e.query),e.name&&(t.name=e.name),e.newMessages&&(t.newMessages=Array.isArray(e.newMessages)?e.newMessages:[e.newMessages]),e.codeChanges&&(t.codeChanges=Array.isArray(e.codeChanges)?e.codeChanges:[e.codeChanges])}else if(typeof e=="string")try{let n=JSON.parse(e);Object.assign(t,n)}catch{e.length>30&&e.includes("-")&&(t.conversationId=e)}}catch(n){c("ERROR",`Error extracting params: ${n.message}`)}return t}function Ur(e){switch(e){case"initialize_conversation_context":return{initialQuery:"Starting a new conversation with DevContext",includeArchitecture:!0,includeRecentConversations:!0,maxCodeContextItems:5,maxRecentChanges:5,contextDepth:"standard"};case"update_conversation_context":return{conversationId:global.lastConversationId,newMessages:[{role:"user",content:"Working with DevContext tools"}],preserveContextOnTopicShift:!0,contextIntegrationLevel:"balanced",trackIntentTransitions:!0};case"retrieve_relevant_context":return{conversationId:global.lastConversationId,query:"DevContext tools and functionality",constraints:{includeConversation:!0,crossTopicSearch:!1},contextFilters:{minRelevanceScore:.3},weightingStrategy:"balanced",balanceStrategy:"proportional",contextBalance:"auto"};case"record_milestone_context":return{conversationId:global.lastConversationId,name:"DevContext Tool Milestone",description:"Milestone recorded during DevContext tools testing",milestoneCategory:"uncategorized",assessImpact:!0};case"finalize_conversation_context":return{conversationId:global.lastConversationId,clearActiveContext:!1,extractLearnings:!0,promotePatterns:!0,synthesizeRelatedTopics:!0,generateNextSteps:!0,outcome:"completed"};default:return{}}}function nn(e){return Te(e,"initialize_conversation_context")}function rn(e){return Te(e,"finalize_conversation_context")}process.env.MCP_MODE="true";var Ve=process.stdout.write,Br=process.stderr.write,qr=console.log,Wr=console.error,jr=console.warn,Gr=console.info,Xr=console.debug;function on(e){if(typeof e!="string")return!1;let t=e.trim();if(!(t.startsWith("{")||t.startsWith("[")))return!1;try{return JSON.parse(t),!0}catch{return!1}}process.stdout.write=function(e,t,n){return process.env.MCP_MODE==="true"?typeof e=="string"&&on(e)?Ve.apply(process.stdout,arguments):(n&&n(),!0):Ve.apply(process.stdout,arguments)};process.stderr.write=function(e,t,n){return process.env.MCP_MODE==="true"?(n&&n(),!0):Br.apply(process.stderr,arguments)};console.log=function(...e){if(process.env.MCP_MODE==="true"){e.length===1&&typeof e[0]=="string"&&on(e[0])&&Ve.call(process.stdout,e[0]+`
`);return}else return qr.apply(console,e)};console.error=function(...e){if(process.env.MCP_MODE!=="true")return Wr.apply(console,e)};console.warn=function(...e){if(process.env.MCP_MODE!=="true")return jr.apply(console,e)};console.info=function(...e){if(process.env.MCP_MODE!=="true")return Gr.apply(console,e)};console.debug=function(...e){if(process.env.MCP_MODE!=="true")return Xr.apply(console,e)};var ve=null;async function Qr(){let e=process.env.MCP_MODE==="true";if(e)try{try{Y(),await Re(),await Ae()}catch{}}catch{}else{(!K||!oe)&&(c("error","Database credentials not set. TURSO_DATABASE_URL and TURSO_AUTH_TOKEN are required."),process.exit(1));try{c("info","Getting database client...");let r=Y();c("info","Database client created successfully.")}catch(r){c("error",`Failed to create database client: ${r.message}`),process.exit(1)}try{c("info","Testing database connection..."),await Re(),c("info","Database connection successful.")}catch(r){c("error",`Database connection failed: ${r.message}`),process.exit(1)}try{c("info","Initializing database schema..."),await Ae(),c("info","Database schema initialized successfully.")}catch(r){c("error",`Failed to initialize database schema: ${r.message}`),process.exit(1)}try{Mt(60),c("info","Scheduled periodic pattern consolidation.");let r=24*60*60*1e3;ve=setInterval(async()=>{try{c("info","Applying context decay..."),await ut(),c("info","Context decay applied successfully.")}catch(o){c("error","Error applying context decay:",{error:o.message})}},r),c("info",`Scheduled periodic context decay every ${r/(60*60*1e3)} hours.`)}catch(r){c("warn",`Failed to schedule background tasks: ${r.message}`)}}let t=new Hr({name:"cursor10x",version:"2.0.0"});for(let r of tn){let o;r.name==="initialize_conversation_context"?o=nn(r.handler):r.name==="finalize_conversation_context"?o=rn(r.handler):o=Te(r.handler,r.name),t.tool(r.name,r.inputSchema,o),e||c("info",`Registered tool: ${r.name}`)}let n=new Jr;e||c("info",`Starting MCP server with PID ${process.pid}...`),Kr();try{await t.connect(n),e||c("info","MCP server stopped."),Ce()}catch(r){e||c("error",`MCP server error: ${r.message}`),Ce(),process.exit(1)}}function Kr(){let e=process.env.MCP_MODE==="true";process.on("SIGINT",()=>{e||c("info","Received SIGINT signal. Shutting down gracefully..."),Ce(),process.exit(0)}),process.on("SIGTERM",()=>{e||c("info","Received SIGTERM signal. Shutting down gracefully..."),Ce(),process.exit(0)})}function Ce(){let e=process.env.MCP_MODE==="true";ve&&(clearInterval(ve),ve=null,e||c("info","Cleared context decay timer."))}(import.meta.url===import.meta.mainUrl||process.env.NODE_ENV!=="test")&&Qr().catch(e=>{process.env.MCP_MODE!=="true"&&c("error",`Unhandled error in startServer: ${e.message}`),process.exit(1)});export{Qr as startServer};
//# sourceMappingURL=mcp-server.bundle.js.map
